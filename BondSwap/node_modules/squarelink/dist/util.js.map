{"version":3,"file":"util.js","sourceRoot":"","sources":["../src/util.js"],"names":[],"mappings":"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","sourcesContent":["/* eslint-disable */\nimport { VERSION } from './config'\nimport { SqlkError } from './error'\nimport getPopup from './popup'\n\nconst SCOPES = [\n  'wallets:admin',\n  'wallets:edit',\n  'wallets:create',\n  'wallets:remove',\n  'wallets:read',\n  'user',\n  'user:name',\n  'user:email',\n  'user:security'\n]\n\n/**\n * URL-encodes a request object\n * @param {object} obj\n */\nexport const _serialize = function(obj) {\n  return encodeURIComponent(JSON.stringify(obj))\n}\n\n/**\n * Creates and executes GET Request\n * @param {string} url\n */\nexport const _fetch = function(url) {\n  return new Promise((resolve, reject) => {\n    let xhr = new XMLHttpRequest();\n    xhr.open('GET', url)\n    xhr.send()\n    xhr.onload = function() {\n      if (xhr.status === 403) {\n        reject(new SqlkError(`You are not authorized to access that resource`))\n      } else if (xhr.status !== 200) {\n        reject(new SqlkError(`Issue connecting to Squarelink servers`))\n      } else {\n        resolve(JSON.parse(xhr.response))\n      }\n    }\n    xhr.onerror = function() {\n      reject(new SqlkError(`Issue connecting to Squarelink servers`))\n    }\n  })\n}\n\n/**\n * Creates Squarelink popup and returns posted result\n * @param {string} url\n */\n export const _popup = function(url) {\n   return new Promise(async (resolve, reject) => {\n     const { popup, iframe, error } = await getPopup(url)\n     if (error) return resolve({ error: 'Window closed' })\n\n     var result = false\n\n     if (popup) {\n       // Poll to check if popup has been closed\n       var popupTick = setInterval(function() {\n         if (result) {\n           clearInterval(popupTick)\n         } else if (popup.closed) {\n           result = true\n           window.removeEventListener('message', function() {})\n           clearInterval(popupTick)\n           resolve({ error: 'Window closed' })\n           const preloader = document.getElementById('squarelink-preloader-container')\n           preloader.parentNode.removeChild(preloader)\n         }\n       }, 1)\n     }\n\n     if (iframe) {\n       iframe.onClosed = (error) => {\n         if (!result) {\n           result = true\n           window.removeEventListener('message', function() {})\n           resolve({ error: error || 'Window closed' })\n         }\n       }\n     }\n\n     window.addEventListener('message', function(e) {\n       const { origin, height, type } = e.data\n       if (type === 'onload') return\n       if (origin === 'squarelink' && !result) {\n         result = true\n         window.removeEventListener('message', function() {})\n         if (popup) {\n           popup.close()\n           const preloader = document.getElementById('squarelink-preloader-container')\n           preloader.parentNode.removeChild(preloader)\n         } else {\n           iframe.close()\n         }\n         resolve({ ...e.data, origin: undefined, height: undefined })\n       }\n     }, false)\n   })\n }\n\n/**\n * Validates Squarelink inputs\n * @param {string} client_id\n * @param {string|object} [network]\n * @param {array} [scope]\n */\nexport const _validateParams = function({ client_id, network, scope }) {\n  if (scope) {\n    if (!Array.isArray(scope))\n      throw new SqlkError(`'scope' must be an Array`)\n    for(let i in scope) {\n      if (!SCOPES.includes(scope[i]))\n        throw new SqlkError(`We do not support the ${scope[i]} scope`)\n    }\n  }\n  if (typeof network === 'object') {\n    if (!network.url)\n      throw new SqlkError('Please provide an RPC endpoint for your custom network')\n    else if (!network.url.match(/(wss|https){1}?:(\\/?\\/?)[^\\s]+/))\n      throw new SqlkError('We do not currently support insecure (http://, ws://) RPC connections. Try updating squarelink to its latest version!')\n    else if (network.chainId && (network.chainId !== parseInt(network.chainId) || network.chainId < 0 || network.chainId > 500000))\n      throw new SqlkError('Please provide a valid Chain ID')\n    else if (network.skipCache !== undefined && typeof network.skipCache !== 'boolean')\n      throw new SqlkError('the `skipCache` paramter must be a boolean')\n  } else if (!this.NETWORKS[network]) {\n    throw new SqlkError('Invalid network provided')\n  } else if (!!this.NETWORKS[network].sdkVersion) {\n    const { sdkVersion } = this.NETWORKS[network]\n    let sdkParts = VERSION.split('.')\n    let netParts = sdkVersion.split('.')\n    for (let i = 0; i < 3; i++) {\n      if (parseInt(sdkParts[i]) > parseInt(netParts[i])) return\n      if (parseInt(sdkParts[i]) < parseInt(netParts[i])) {\n        throw new SqlkError(`You need to update Squarelink to squarelink@${sdkVersion} to use that network`)\n      }\n    }\n  }\n}\n\n/**\n * Notifies developer that their app won't work if on an insecure origin\n */\nexport const _validateSecureOrigin = function() {\n  const isLocalhost = location.hostname === 'localhost' || location.hostname === '127.0.0.1'\n  const isSecureOrigin = location.protocol === 'https:'\n  const isChromeExt = location.protocol === 'chrome-extension:'\n  const isSecure = isLocalhost || isSecureOrigin || isChromeExt\n\n  if (!isSecure) {\n    throw new SqlkError(`Access to the Squarelink Web3 Engine is restricted to secure origins.\\nIf this is a development environment please use http://localhost:${\n      location.port\n    } instead.\\nOtherwise, please use an SSL certificate.`)\n  }\n}\n\n/**\n * Gets RPC info from network parameter\n * @param {string|object} network\n */\nexport const _getRPCInfo = function(network) {\n  var rpcUrl\n  var skipCache = true\n  if (typeof network === 'object') {\n    rpcUrl = network.url\n    skipCache = network.skipCache !== undefined ? network.skipCache : true\n  } else {\n    let netInfo = this.NETWORKS[network]\n    rpcUrl = netInfo.rpcUrl\n    skipCache = netInfo.skipCache !== undefined ? netInfo.skipCache : true\n  }\n  const protocol = rpcUrl.split(':')[0].toLowerCase()\n  switch (protocol) {\n    case 'http':\n    case 'https':\n      return {\n        rpcUrl,\n        skipCache,\n        connectionType: 'http'\n      }\n    case 'ws':\n    case 'wss':\n      return {\n        rpcUrl,\n        skipCache,\n        connectionType: 'ws'\n      }\n    default:\n      throw new SqlkError(`Unrecognized protocol in \"${rpcUrl}\"`)\n  }\n}\n\n/**\n * Get the current network version\n * @param {string|object} network\n */\nexport const _getNetVersion = function(network) {\n  if (typeof network === 'object') return network.chainId || null\n  return this.NETWORKS[network].chainId\n}\n"]}