{"version":3,"file":"index.js","sourceRoot":"","sources":["../src/index.js"],"names":[],"mappings":"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","sourcesContent":["import ProviderEngine from 'squarelink-provider-engine'\nimport CacheSubprovider from 'squarelink-provider-engine/subproviders/cache'\nimport FixtureSubprovider from 'squarelink-provider-engine/subproviders/fixture'\nimport FilterSubprovider from 'squarelink-provider-engine/subproviders/filters'\nimport GasPriceSubprovider from 'squarelink-provider-engine/subproviders/gasprice'\nimport HookedWalletSubprovider from 'squarelink-provider-engine/subproviders/hooked-wallet'\nimport NonceSubprovider from 'squarelink-provider-engine/subproviders/nonce-tracker'\nimport RpcSubprovider from 'squarelink-provider-engine/subproviders/rpc'\nimport SubscriptionSubprovider from 'squarelink-provider-engine/subproviders/subscriptions'\nimport WebSocketSubprovider from 'squarelink-provider-engine/subproviders/websocket'\n\nimport { VERSION } from './config'\nimport {\n  _serialize,\n  _validateParams,\n  _getRPCInfo,\n  _validateSecureOrigin,\n  _getNetVersion,\n} from './util'\nimport { _loadNetworks, _waitForNetworks, _availableAsSync } from './networks'\nimport { _getAccounts, _callAPI, _signTx, _signMsg } from './walletMethods'\nimport { SqlkError } from './error'\n\nexport default class Squarelink {\n  /**\n   * @param {string} clientId - Squarelink Client ID\n   * @param {string} [network] - name of the network\n   * @param {object} [network]\n   * @param {string} [network.url] - the RPC Endpoint\n   * @param {string} [network.chainId]\n   */\n  constructor(client_id, network='mainnet', opts = {}) {\n    if (opts.useSync) {\n      this.NETWORKS = _availableAsSync\n      this.useSync = true\n    } else {\n      _loadNetworks.call(this)\n    }\n\n    this.client_id = client_id\n    this.network = network\n    this.token = opts.token\n    this.scope = opts.scope || []\n  }\n\n  /**\n   * @returns { Web3Provider } a Web3Provider for use in web3.js\n   */\n  async getProvider(cb) {\n    try {\n      if (this.useSync) throw new SqlkError('Please set `useSync` to false')\n      await _waitForNetworks.call(this)\n      const { client_id, network, scope } = this\n      _validateSecureOrigin()\n      _validateParams.call(this, { client_id, network, scope })\n      this.changeNetwork(network)\n      // Support callbacks over promises\n      if (cb) return cb(this.engine, null)\n      return Promise.resolve(this.engine)\n    } catch (err) {\n      if (cb) return cb(null, err)\n      return Promise.reject(err)\n    }\n  }\n\n  getProviderSync() {\n    console.warn('[Squarelink]: getProviderSync is not recommended as we cannot ensure uptime of RPC providers.')\n    if (!this.useSync) throw new SqlkError('Please set `useSync` to true')\n    const { client_id, network, scope } = this\n    _validateSecureOrigin()\n    _validateParams.call(this, { client_id, network, scope })\n    this.changeNetwork(network)\n    return this.engine\n  }\n\n  /**\n   * Change the connected network\n   * @param {string} network\n   * @param {object} network\n   * @param {string} network.url\n   * @param {string} network.chainId\n   */\n  changeNetwork(network) {\n    const { client_id } = this\n    _validateParams.call(this, { client_id, network })\n    this.network = network\n    this.net_version = _getNetVersion.call(this, network)\n    const { rpcUrl, connectionType, skipCache } = _getRPCInfo.call(this, network)\n    this.connectionType = connectionType\n    this.rpcUrl = rpcUrl\n    this._initEngine(skipCache)\n  }\n\n  /* END CUSTOM SQUARELINK METHODS */\n\n  _initEngine(skipCache) {\n    var self = this\n    this.accounts = []\n    var engine = new ProviderEngine({\n      setSkipCacheFlag: skipCache,\n    })\n    engine.isSquarelink = true\n    engine.isConnected = () => {\n      return true\n    }\n    engine.send = (payload, callback) => {\n      if (typeof payload === 'string') {\n        return new Promise((resolve, reject) => {\n          engine.sendAsync({\n            jsonrpc: '2.0',\n            id: 42,\n            method: payload,\n            params: callback || [],\n          }, (error, response) => {\n            if (error) {\n              reject(error)\n            } else {\n              resolve(response.result)\n            }\n          })\n        })\n      }\n\n      if (callback) {\n        engine.sendAsync(payload, callback)\n        return\n      }\n\n      let result = null\n      switch (payload.method) {\n        case 'eth_accounts':\n          result = this.accounts.length ? this.accounts : []\n          break\n\n        case 'eth_coinbase':\n          result = this.accounts.length ? this.accounts[0] : undefined\n          break\n\n        case 'net_version':\n          result = this.net_version || null\n          break\n\n        default:\n          var message = `The Squarelink Web3 object does not support synchronous methods like ${payload.method} without a callback parameter.`\n          throw new SqlkError(message)\n      }\n      return {\n        id: payload.id,\n        jsonrpc: payload.jsonrpc,\n        result,\n      }\n    }\n\n    /**\n     * START OF MIDDLEWARE DECLARATIONS\n     */\n    const fixtureSubprovider = new FixtureSubprovider({\n      web3_clientVersion: `Squarelink/v${VERSION}/javascript`,\n      net_listening: true,\n      eth_hashrate: '0x00',\n      eth_mining: false,\n      eth_syncing: true,\n    })\n    const nonceSubprovider = new NonceSubprovider()\n    const cacheSubprovider = new CacheSubprovider()\n    const gasPriceSubprovider = new GasPriceSubprovider()\n    /* Squarelink ID/Wallet Management */\n    const walletSubprovider = new HookedWalletSubprovider({\n      getAccounts: async function(cb){\n        cb(null, self.accounts)\n      },\n      getCoinbase: async function(cb) {\n        this.getAccounts()\n          .then((accounts) => cb(null, accounts[0]))\n          .catch(err => cb(err, null))\n      },\n      signTransaction: async function(payload, cb) {\n        if (!self.accounts.length) {\n          cb(new SqlkError('No accounts available'), null)\n          return\n        }\n        let { from } = payload\n        if (typeof from === 'number')\n          from = self.accounts[from]\n        _signTx({\n          ...payload,\n          from,\n          method: 'eth_signTransaction',\n          client_id: self.client_id,\n          network: self.network\n        })\n        .then(res => {\n          cb(null, res)\n        })\n        .catch(err => {\n          cb(err, null)\n        })\n      },\n      signMessage: async function(payload, cb) {\n        if (!self.accounts.length) {\n          cb(new SqlkError('No accounts available'), null)\n          return\n        }\n        let { from, data, method } = payload\n        if (typeof from === 'number')\n          from = self.accounts[from]\n        _signMsg({\n          client_id: self.client_id,\n          method: method || 'eth_sign',\n          message: data,\n          account: from,\n        })\n        .then(res => cb(null, res))\n        .catch(err => cb(err, null))\n      },\n      signPersonalMessage: async function(payload, cb) {\n        if (!self.accounts.length) {\n          cb(new SqlkError('No accounts available'), null)\n          return\n        }\n        this.signMessage({ ...payload, method: 'eth_personalSign' }, (err, res) => {\n          if (err) cb(err, null)\n          else cb(null, res)\n        })\n      },\n      signTypedMessage: async function(payload, cb) {\n        if (!self.accounts.length) {\n          cb(new SqlkError('No accounts available'), null)\n          return\n        }\n        this.signMessage({ ...payload, method: 'eth_signTypedData' }, (err, res) => {\n          if (err) cb(err, null)\n          else cb(null, res)\n        })\n      },\n      signTypedMessageV3: async function(payload, cb) {\n        if (!self.accounts.length) {\n          cb(new SqlkError('No accounts available'), null)\n          return\n        }\n        this.signMessage({ ...payload, method: 'eth_signTypedData_v3' }, (err, res) => {\n          if (err) cb(err, null)\n          else cb(null, res)\n        })\n      },\n    })\n    /* ADD MIDDELWARE (PRESERVE ORDER) */\n    engine.addProvider(fixtureSubprovider)\n    engine.addProvider(nonceSubprovider)\n    engine.addProvider(cacheSubprovider)\n    engine.addProvider(gasPriceSubprovider)\n    engine.addProvider(walletSubprovider, 0)\n\n    const { rpcUrl, connectionType } = this\n    if (connectionType === 'http') {\n      engine.addProvider(new RpcSubprovider({ rpcUrl }))\n      engine.addProvider(new SubscriptionSubprovider(), 2)\n      engine.addProvider(new FilterSubprovider(), 1)\n    } else if (connectionType === 'ws') {\n      engine.addProvider(new WebSocketSubprovider({ rpcUrl }))\n    }\n\n    /* END OF MIDDLEWARE */\n\n    engine.on('error', function(err){\n      console.error(err.stack)\n    })\n\n    engine.enable = () =>\n      new Promise((resolve, reject) => {\n        if (self.token) {\n          _callAPI(self.token, { scope: self.scope }).then(({ email, name, securitySettings, accounts }) => {\n            self.accounts = accounts\n            self.defaultEmail = email\n            self.defaultName = name\n            self.defaultSecuritySettings = securitySettings\n            resolve(accounts)\n          }).catch(err => reject(err, null))\n        } else {\n          _getAccounts(self.client_id, { scope: self.scope }).then(({ email, name, securitySettings, accounts }) => {\n            self.accounts = accounts\n            self.defaultEmail = email\n            self.defaultName = name\n            self.defaultSecuritySettings = securitySettings\n            resolve(accounts)\n          }).catch(err => reject(err))\n        }\n      })\n\n    engine.start()\n\n    this.engine = engine\n  }\n\n  /* CUSTOM SQUARELINK METHODS */\n\n  /**\n   * @returns {string} the user's email\n   */\n  getEmail() {\n    if (!this.scope.includes('user') && !this.scope.includes('user:email'))\n      throw new SqlkError(`Please enable the user:email scope when initializing Squarelink`)\n    return this.defaultEmail\n  }\n\n  /**\n   * Returns the name of the authenticated user\n   * @returns {string} the user's name\n   */\n  getName() {\n    if (!this.scope.includes('user') && !this.scope.includes('user:name'))\n      throw new SqlkError(`Please enable the user:name scope when initializing Squarelink`)\n    return this.defaultName\n  }\n\n  /**\n   * @typedef {Object} SquarelinkSecurity\n   * @property {string} has2fa\n   * @property {string} hasRecovery\n   * @property {string} emailVerified\n   */\n  /**\n   * Returns the security settings of the authenticated user\n   * @returns {SquarelinkSecurity} security settings\n   */\n  getSecuritySettings() {\n    if (!this.scope.includes('user') && !this.scope.includes('user:security'))\n      throw new SqlkError(`Please enable the user:security scope when initializing Squarelink`)\n    return this.defaultSecuritySettings\n  }\n}\n"]}