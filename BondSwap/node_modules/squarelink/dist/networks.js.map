{"version":3,"file":"networks.js","sourceRoot":"","sources":["../src/networks.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,+BAA+B;AAC/B,mCAA2D;AAC3D,iCAAmC;AAEtB,QAAA,aAAa,GAAG;IAAA,iBAQ5B;IAPC,IAAI,CAAC,eAAe,GAAG,IAAI,CAAA;IAC3B,aAAM,CAAC,qBAAY,CAAC,CAAC,IAAI,CAAC,UAAA,IAAI;QAC5B,KAAI,CAAC,QAAQ,GAAG,IAAI,CAAA;QACpB,KAAI,CAAC,eAAe,GAAG,KAAK,CAAA;IAC9B,CAAC,CAAC,CAAC,KAAK,CAAC,UAAA,GAAG;QACV,MAAM,IAAI,iBAAS,CAAC,gCAAgC,CAAC,CAAA;IACvD,CAAC,CAAC,CAAA;AACJ,CAAC,CAAA;AAEY,QAAA,gBAAgB,GAAG;;;;YAC9B,sBAAO,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM;oBACjC,IAAI,QAAQ,GAAG,WAAW,CAAC;wBACzB,IAAI,CAAC,KAAI,CAAC,eAAe,EAAE;4BACzB,aAAa,CAAC,QAAQ,CAAC,CAAA;4BACvB,OAAO,EAAE,CAAA;yBACV;oBACH,CAAC,EAAE,CAAC,CAAC,CAAA;gBACP,CAAC,CAAC,EAAA;;;CACH,CAAA;AAEY,QAAA,gBAAgB,GAAG,IAAI,CAAC,KAAK,CAAC,2BAAkB,CAAC,CAAA","sourcesContent":["import { _fetch } from './util'\nimport { NETWORK_LIST, AVAILABLE_NETWORKS } from './config'\nimport { SqlkError } from './error'\n\nexport const _loadNetworks = function () {\n  this.loadingNetworks = true\n  _fetch(NETWORK_LIST).then(data => {\n    this.NETWORKS = data\n    this.loadingNetworks = false\n  }).catch(err => {\n    throw new SqlkError('Issue connecting to Squarelink')\n  })\n}\n\nexport const _waitForNetworks = async function () {\n  return new Promise((resolve, reject) => {\n    let interval = setInterval(() => {\n      if (!this.loadingNetworks) {\n        clearInterval(interval)\n        resolve()\n      }\n    }, 1)\n  })\n}\n\nexport const _availableAsSync = JSON.parse(AVAILABLE_NETWORKS)\n"]}