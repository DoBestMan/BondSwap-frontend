import * as Web3 from 'web3';
import { BlockRange, ContractEvents, IndexedFilterValues } from '../types';
export declare const filterUtils: {
    generateUUID(): string;
    getFilter(address: string, eventName: ContractEvents, indexFilterValues: IndexedFilterValues, abi: Web3.AbiDefinition[], blockRange?: BlockRange | undefined): Web3.FilterObject;
    getEventSignatureFromAbiByName(eventAbi: Web3.EventAbi, eventName: ContractEvents): string;
    getTopicsForIndexedArgs(abi: Web3.EventAbi, indexFilterValues: IndexedFilterValues): (string | null)[];
    matchesFilter(log: Web3.LogEntry, filter: Web3.FilterObject): boolean;
    matchesTopics(logTopics: string[], filterTopics: (string | string[] | null)[]): boolean;
    matchesTopic(logTopic: string, filterTopic: string | string[] | null): boolean;
};
