import { BalanceAndProxyAllowanceLazyStore } from '../stores/balance_proxy_allowance_lazy_store';
import { OrderFilledCancelledLazyStore } from '../stores/order_filled_cancelled_lazy_store';
import { OrderRelevantState, OrderState, SignedOrder } from '../types';
export declare class OrderStateUtils {
    private _balanceAndProxyAllowanceLazyStore;
    private _orderFilledCancelledLazyStore;
    private static _validateIfOrderIsValid(signedOrder, orderRelevantState);
    constructor(balanceAndProxyAllowanceLazyStore: BalanceAndProxyAllowanceLazyStore, orderFilledCancelledLazyStore: OrderFilledCancelledLazyStore);
    getOrderStateAsync(signedOrder: SignedOrder): Promise<OrderState>;
    getOrderRelevantStateAsync(signedOrder: SignedOrder): Promise<OrderRelevantState>;
}
