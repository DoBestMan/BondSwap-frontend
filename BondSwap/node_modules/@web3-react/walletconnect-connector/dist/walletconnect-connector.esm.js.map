{"version":3,"file":"walletconnect-connector.esm.js","sources":["../src/index.ts"],"sourcesContent":["import { ConnectorUpdate } from '@web3-react/types'\nimport { AbstractConnector } from '@web3-react/abstract-connector'\nimport invariant from 'tiny-invariant'\n\nexport const URI_AVAILABLE = 'URI_AVAILABLE'\n\nexport class UserRejectedRequestError extends Error {\n  public constructor() {\n    super()\n    this.name = this.constructor.name\n    this.message = 'The user rejected the request.'\n  }\n}\n\ninterface WalletConnectConnectorArguments {\n  rpc: { [chainId: number]: string }\n  bridge?: string\n  qrcode?: boolean\n  pollingInterval?: number\n}\n\nexport class WalletConnectConnector extends AbstractConnector {\n  private readonly rpc: { [chainId: number]: string }\n  private readonly bridge?: string\n  private readonly qrcode?: boolean\n  private readonly pollingInterval?: number\n\n  public walletConnectProvider?: any\n\n  constructor({ rpc, bridge, qrcode, pollingInterval }: WalletConnectConnectorArguments) {\n    invariant(Object.keys(rpc).length === 1, '@walletconnect/web3-provider is broken with >1 chainId, please use 1')\n    super({ supportedChainIds: Object.keys(rpc).map(k => Number(k)) })\n\n    this.rpc = rpc\n    this.bridge = bridge\n    this.qrcode = qrcode\n    this.pollingInterval = pollingInterval\n\n    this.handleChainChanged = this.handleChainChanged.bind(this)\n    this.handleAccountsChanged = this.handleAccountsChanged.bind(this)\n    this.handleDisconnect = this.handleDisconnect.bind(this)\n  }\n\n  private handleChainChanged(chainId: number | string): void {\n    if (__DEV__) {\n      console.log(\"Handling 'chainChanged' event with payload\", chainId)\n    }\n    this.emitUpdate({ chainId })\n  }\n\n  private handleAccountsChanged(accounts: string[]): void {\n    if (__DEV__) {\n      console.log(\"Handling 'accountsChanged' event with payload\", accounts)\n    }\n    this.emitUpdate({ account: accounts[0] })\n  }\n\n  private handleDisconnect(): void {\n    if (__DEV__) {\n      console.log(\"Handling 'disconnect' event\")\n    }\n    this.emitDeactivate()\n    // we have to do this because of a @walletconnect/web3-provider bug\n    if (this.walletConnectProvider) {\n      this.walletConnectProvider.stop()\n      this.walletConnectProvider.removeListener('chainChanged', this.handleChainChanged)\n      this.walletConnectProvider.removeListener('accountsChanged', this.handleAccountsChanged)\n      this.walletConnectProvider = undefined\n    }\n\n    this.emitDeactivate()\n  }\n\n  public async activate(): Promise<ConnectorUpdate> {\n    if (!this.walletConnectProvider) {\n      const WalletConnectProvider = await import('@walletconnect/web3-provider').then(m => m?.default ?? m)\n      this.walletConnectProvider = new WalletConnectProvider({\n        bridge: this.bridge,\n        rpc: this.rpc,\n        qrcode: this.qrcode,\n        pollingInterval: this.pollingInterval\n      })\n    }\n\n    // ensure that the uri is going to be available, and emit an event if there's a new uri\n    if (!this.walletConnectProvider.wc.connected) {\n      await this.walletConnectProvider.wc.createSession({ chainId: Number(Object.keys(this.rpc)[0]) })\n      this.emit(URI_AVAILABLE, this.walletConnectProvider.wc.uri)\n    }\n\n    const account = await this.walletConnectProvider\n      .enable()\n      .then((accounts: string[]): string => accounts[0])\n      .catch((error: Error): void => {\n        // TODO ideally this would be a better check\n        if (error.message === 'User closed modal') {\n          throw new UserRejectedRequestError()\n        }\n\n        throw error\n      })\n\n    this.walletConnectProvider.on('disconnect', this.handleDisconnect)\n    this.walletConnectProvider.on('chainChanged', this.handleChainChanged)\n    this.walletConnectProvider.on('accountsChanged', this.handleAccountsChanged)\n\n    return { provider: this.walletConnectProvider, account }\n  }\n\n  public async getProvider(): Promise<any> {\n    return this.walletConnectProvider\n  }\n\n  public async getChainId(): Promise<number | string> {\n    return this.walletConnectProvider.send('eth_chainId')\n  }\n\n  public async getAccount(): Promise<null | string> {\n    return this.walletConnectProvider.send('eth_accounts').then((accounts: string[]): string => accounts[0])\n  }\n\n  public deactivate() {\n    if (this.walletConnectProvider) {\n      this.walletConnectProvider.stop()\n      this.walletConnectProvider.removeListener('disconnect', this.handleDisconnect)\n      this.walletConnectProvider.removeListener('chainChanged', this.handleChainChanged)\n      this.walletConnectProvider.removeListener('accountsChanged', this.handleAccountsChanged)\n    }\n  }\n\n  public async close() {\n    await this.walletConnectProvider?.close()\n  }\n}\n"],"names":["URI_AVAILABLE","UserRejectedRequestError","name","constructor","message","Error","WalletConnectConnector","rpc","bridge","qrcode","pollingInterval","Object","keys","length","invariant","supportedChainIds","map","k","Number","handleChainChanged","bind","handleAccountsChanged","handleDisconnect","chainId","console","log","emitUpdate","accounts","account","emitDeactivate","walletConnectProvider","stop","removeListener","undefined","activate","enable","then","error","on","provider","wc","connected","createSession","emit","uri","m","WalletConnectProvider","getProvider","getChainId","send","getAccount","deactivate","close","AbstractConnector"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAIaA,aAAa,GAAG;IAEhBC,wBAAb;AAAA;;AACE;;;AACE;AACA,UAAKC,IAAL,GAAY,MAAKC,WAAL,CAAiBD,IAA7B;AACA,UAAKE,OAAL,GAAe,gCAAf;;AACD;;AALH;AAAA,iCAA8CC,KAA9C;IAeaC,sBAAb;AAAA;;AAQE;;;QAAcC,WAAAA;QAAKC,cAAAA;QAAQC,cAAAA;QAAQC,uBAAAA;AACjC,MAAUC,MAAM,CAACC,IAAP,CAAYL,GAAZ,EAAiBM,MAAjB,KAA4B,CAAtC,4CAAAC,SAAS,QAAgC,sEAAhC,CAAT,GAAAA,SAAS,OAAT;AACA,2CAAM;AAAEC,MAAAA,iBAAiB,EAAEJ,MAAM,CAACC,IAAP,CAAYL,GAAZ,EAAiBS,GAAjB,CAAqB,UAAAC,CAAC;AAAA,eAAIC,MAAM,CAACD,CAAD,CAAV;AAAA,OAAtB;AAArB,KAAN;AAEA,WAAKV,GAAL,GAAWA,GAAX;AACA,WAAKC,MAAL,GAAcA,MAAd;AACA,WAAKC,MAAL,GAAcA,MAAd;AACA,WAAKC,eAAL,GAAuBA,eAAvB;AAEA,WAAKS,kBAAL,GAA0B,OAAKA,kBAAL,CAAwBC,IAAxB,gCAA1B;AACA,WAAKC,qBAAL,GAA6B,OAAKA,qBAAL,CAA2BD,IAA3B,gCAA7B;AACA,WAAKE,gBAAL,GAAwB,OAAKA,gBAAL,CAAsBF,IAAtB,gCAAxB;;AACD;;AApBH;;AAAA,SAsBUD,kBAtBV,GAsBU,4BAAmBI,OAAnB;AACN,+CAAa;AACXC,MAAAA,OAAO,CAACC,GAAR,CAAY,4CAAZ,EAA0DF,OAA1D;AACD;;AACD,SAAKG,UAAL,CAAgB;AAAEH,MAAAA,OAAO,EAAPA;AAAF,KAAhB;AACD,GA3BH;;AAAA,SA6BUF,qBA7BV,GA6BU,+BAAsBM,QAAtB;AACN,+CAAa;AACXH,MAAAA,OAAO,CAACC,GAAR,CAAY,+CAAZ,EAA6DE,QAA7D;AACD;;AACD,SAAKD,UAAL,CAAgB;AAAEE,MAAAA,OAAO,EAAED,QAAQ,CAAC,CAAD;AAAnB,KAAhB;AACD,GAlCH;;AAAA,SAoCUL,gBApCV,GAoCU;AACN,+CAAa;AACXE,MAAAA,OAAO,CAACC,GAAR,CAAY,6BAAZ;AACD;;AACD,SAAKI,cAAL;;AAEA,QAAI,KAAKC,qBAAT,EAAgC;AAC9B,WAAKA,qBAAL,CAA2BC,IAA3B;AACA,WAAKD,qBAAL,CAA2BE,cAA3B,CAA0C,cAA1C,EAA0D,KAAKb,kBAA/D;AACA,WAAKW,qBAAL,CAA2BE,cAA3B,CAA0C,iBAA1C,EAA6D,KAAKX,qBAAlE;AACA,WAAKS,qBAAL,GAA6BG,SAA7B;AACD;;AAED,SAAKJ,cAAL;AACD,GAlDH;;AAAA,SAoDeK,QApDf;AAAA;mBAqDS;;;;iCAgBiB,OAAKJ,qBAAL,CACnBK,MADmB,GAEnBC,IAFmB,CAEd,UAACT,QAAD;AAAA,mBAAgCA,QAAQ,CAAC,CAAD,CAAxC;AAAA,WAFc,WAGb,UAACU,KAAD;AACL;AACA,gBAAIA,KAAK,CAACjC,OAAN,KAAkB,mBAAtB,EAA2C;AACzC,oBAAM,IAAIH,wBAAJ,EAAN;AACD;;AAED,kBAAMoC,KAAN;AACD,WAVmB,kBAAhBT;AAYN,mBAAKE,qBAAL,CAA2BQ,EAA3B,CAA8B,YAA9B,EAA4C,OAAKhB,gBAAjD;;AACA,mBAAKQ,qBAAL,CAA2BQ,EAA3B,CAA8B,cAA9B,EAA8C,OAAKnB,kBAAnD;;AACA,mBAAKW,qBAAL,CAA2BQ,EAA3B,CAA8B,iBAA9B,EAAiD,OAAKjB,qBAAtD;;AAEA,mBAAO;AAAEkB,cAAAA,QAAQ,EAAE,OAAKT,qBAAjB;AAAwCF,cAAAA,OAAO,EAAPA;AAAxC,aAAP;;;;;cArBI,CAAC,OAAKE,qBAAL,CAA2BU,EAA3B,CAA8BC;mCAC3B,OAAKX,qBAAL,CAA2BU,EAA3B,CAA8BE,aAA9B,CAA4C;AAAEnB,cAAAA,OAAO,EAAEL,MAAM,CAACP,MAAM,CAACC,IAAP,CAAY,OAAKL,GAAjB,EAAsB,CAAtB,CAAD;AAAjB,aAA5C;AACN,qBAAKoC,IAAL,CAAU3C,aAAV,EAAyB,OAAK8B,qBAAL,CAA2BU,EAA3B,CAA8BI,GAAvD;;;;;AAHF;;;;;YAVI,CAAC,OAAKd;iCAC4B,OAAO,8BAAP,EAAuCM,IAAvC,CAA4C,UAAAS,CAAC;AAAA;;AAAA,iCAAIA,CAAJ,oBAAIA,CAAC,WAAL,yBAAkBA,CAAlB;AAAA,WAA7C,kBAA9BC;AACN,mBAAKhB,qBAAL,GAA6B,IAAIgB,qBAAJ,CAA0B;AACrDtC,cAAAA,MAAM,EAAE,OAAKA,MADwC;AAErDD,cAAAA,GAAG,EAAE,OAAKA,GAF2C;AAGrDE,cAAAA,MAAM,EAAE,OAAKA,MAHwC;AAIrDC,cAAAA,eAAe,EAAE,OAAKA;AAJ+B,aAA1B,CAA7B;;;;;;AA+BH,KAtFH;AAAA;AAAA;AAAA;;AAAA,SAwFeqC,WAxFf;AAAA;mBAyFW;;AAAP,6BAAO,OAAKjB,qBAAZ;AACD,KA1FH;AAAA;AAAA;AAAA;;AAAA,SA4FekB,UA5Ff;AAAA;mBA6FW;;AAAP,6BAAO,OAAKlB,qBAAL,CAA2BmB,IAA3B,CAAgC,aAAhC,CAAP;AACD,KA9FH;AAAA;AAAA;AAAA;;AAAA,SAgGeC,UAhGf;AAAA;oBAiGW;;AAAP,6BAAO,QAAKpB,qBAAL,CAA2BmB,IAA3B,CAAgC,cAAhC,EAAgDb,IAAhD,CAAqD,UAACT,QAAD;AAAA,eAAgCA,QAAQ,CAAC,CAAD,CAAxC;AAAA,OAArD,CAAP;AACD,KAlGH;AAAA;AAAA;AAAA;;AAAA,SAoGSwB,UApGT,GAoGS;AACL,QAAI,KAAKrB,qBAAT,EAAgC;AAC9B,WAAKA,qBAAL,CAA2BC,IAA3B;AACA,WAAKD,qBAAL,CAA2BE,cAA3B,CAA0C,YAA1C,EAAwD,KAAKV,gBAA7D;AACA,WAAKQ,qBAAL,CAA2BE,cAA3B,CAA0C,cAA1C,EAA0D,KAAKb,kBAA/D;AACA,WAAKW,qBAAL,CAA2BE,cAA3B,CAA0C,iBAA1C,EAA6D,KAAKX,qBAAlE;AACD;AACF,GA3GH;;AAAA,SA6Ge+B,KA7Gf;AAAA;;;oBA8GU;;sDAAA,QAAKtB,0CAAL,sBAA4BsB,KAA5B;AACP,KA/GH;AAAA;AAAA;AAAA;;AAAA;AAAA,EAA4CC,iBAA5C;;;;"}