{"version":3,"file":"squarelink-connector.esm.js","sources":["../src/index.ts"],"sourcesContent":["import { ConnectorUpdate } from '@web3-react/types'\nimport { AbstractConnector } from '@web3-react/abstract-connector'\nimport invariant from 'tiny-invariant'\n\nconst chainIdToNetwork: { [network: number]: string } = {\n  1: 'mainnet',\n  3: 'ropsten',\n  4: 'rinkeby',\n  5: 'goerli',\n  42: 'kovan',\n  100: 'xdai'\n}\n\ntype Network = number | { chainId: number; [key: string]: any }\n\ninterface SquarelinkConnectorArguments {\n  clientId: string\n  networks: Network[]\n  options?: any\n}\n\nexport class SquarelinkConnector extends AbstractConnector {\n  private readonly clientId: string\n  private readonly networks: Network[]\n  private readonly options: any\n\n  public squarelink: any\n\n  constructor({ clientId, networks, options = {} }: SquarelinkConnectorArguments) {\n    const chainIds = networks.map((n): number => (typeof n === 'number' ? n : n.chainId))\n    invariant(\n      chainIds.every((c): boolean => !!chainIdToNetwork[c]),\n      `One or more unsupported networks ${networks}`\n    )\n    super({ supportedChainIds: chainIds })\n\n    this.clientId = clientId\n    this.networks = networks\n    this.options = options\n  }\n\n  public async activate(): Promise<ConnectorUpdate> {\n    if (!this.squarelink) {\n      const Squarelink = await import('squarelink').then(m => m?.default ?? m)\n      this.squarelink = new Squarelink(\n        this.clientId,\n        typeof this.networks[0] === 'number' ? chainIdToNetwork[this.networks[0]] : this.networks[0],\n        this.options\n      )\n    }\n\n    const provider = await this.squarelink.getProvider()\n\n    const account = await provider.enable().then((accounts: string[]): string => accounts[0])\n\n    return { provider, account }\n  }\n\n  public async getProvider(): Promise<any> {\n    return this.squarelink.getProvider()\n  }\n\n  public async getChainId(): Promise<number | string> {\n    return this.squarelink.getProvider().then((provider: any) => provider.send('eth_chainId'))\n  }\n\n  public async getAccount(): Promise<null | string> {\n    return this.squarelink\n      .getProvider()\n      .then((provider: any) => provider.send('eth_accounts').then((accounts: string[]): string => accounts[0]))\n  }\n\n  public deactivate() {}\n}\n"],"names":["chainIdToNetwork","SquarelinkConnector","clientId","networks","options","chainIds","map","n","chainId","every","c","invariant","supportedChainIds","activate","squarelink","getProvider","provider","enable","then","accounts","account","m","Squarelink","getChainId","send","getAccount","deactivate","AbstractConnector"],"mappings":";;;;;;;;;;;;;;;;;;;AAIA,IAAMA,gBAAgB,GAAkC;AACtD,KAAG,SADmD;AAEtD,KAAG,SAFmD;AAGtD,KAAG,SAHmD;AAItD,KAAG,QAJmD;AAKtD,MAAI,OALkD;AAMtD,OAAK;AANiD,CAAxD;IAiBaC,mBAAb;AAAA;;AAOE;;;QAAcC,gBAAAA;QAAUC,gBAAAA;4BAAUC;QAAAA,oCAAU;AAC1C,QAAMC,QAAQ,GAAGF,QAAQ,CAACG,GAAT,CAAa,UAACC,CAAD;AAAA,aAAgB,OAAOA,CAAP,KAAa,QAAb,GAAwBA,CAAxB,GAA4BA,CAAC,CAACC,OAA9C;AAAA,KAAb,CAAjB;AACA,KACEH,QAAQ,CAACI,KAAT,CAAe,UAACC,CAAD;AAAA,aAAgB,CAAC,CAACV,gBAAgB,CAACU,CAAD,CAAlC;AAAA,KAAf,CADF,2CAAAC,SAAS,8CAE6BR,QAF7B,CAAT,GAAAQ,SAAS,OAAT;AAIA,0CAAM;AAAEC,MAAAA,iBAAiB,EAAEP;AAArB,KAAN;AAEA,UAAKH,QAAL,GAAgBA,QAAhB;AACA,UAAKC,QAAL,GAAgBA,QAAhB;AACA,UAAKC,OAAL,GAAeA,OAAf;;AACD;;AAlBH;;AAAA,SAoBeS,QApBf;AAAA;mBAqBS;;;+BASkB,OAAKC,UAAL,CAAgBC,WAAhB,mBAAjBC;iCAEgBA,QAAQ,CAACC,MAAT,GAAkBC,IAAlB,CAAuB,UAACC,QAAD;AAAA,mBAAgCA,QAAQ,CAAC,CAAD,CAAxC;AAAA,WAAvB,kBAAhBC;AAEN,mBAAO;AAAEJ,cAAAA,QAAQ,EAARA,QAAF;AAAYI,cAAAA,OAAO,EAAPA;AAAZ,aAAP;;;;;;YAbI,CAAC,OAAKN;iCACiB,OAAO,YAAP,EAAqBI,IAArB,CAA0B,UAAAG,CAAC;AAAA;;AAAA,iCAAIA,CAAJ,oBAAIA,CAAC,WAAL,yBAAkBA,CAAlB;AAAA,WAA3B,kBAAnBC;AACN,mBAAKR,UAAL,GAAkB,IAAIQ,UAAJ,CAChB,OAAKpB,QADW,EAEhB,OAAO,OAAKC,QAAL,CAAc,CAAd,CAAP,KAA4B,QAA5B,GAAuCH,gBAAgB,CAAC,OAAKG,QAAL,CAAc,CAAd,CAAD,CAAvD,GAA4E,OAAKA,QAAL,CAAc,CAAd,CAF5D,EAGhB,OAAKC,OAHW,CAAlB;;;;;;AAYH,KAnCH;AAAA;AAAA;AAAA;;AAAA,SAqCeW,WArCf;AAAA;mBAsCW;;AAAP,6BAAO,OAAKD,UAAL,CAAgBC,WAAhB,EAAP;AACD,KAvCH;AAAA;AAAA;AAAA;;AAAA,SAyCeQ,UAzCf;AAAA;mBA0CW;;AAAP,6BAAO,OAAKT,UAAL,CAAgBC,WAAhB,GAA8BG,IAA9B,CAAmC,UAACF,QAAD;AAAA,eAAmBA,QAAQ,CAACQ,IAAT,CAAc,aAAd,CAAnB;AAAA,OAAnC,CAAP;AACD,KA3CH;AAAA;AAAA;AAAA;;AAAA,SA6CeC,UA7Cf;AAAA;mBA8CW;;AAAP,6BAAO,OAAKX,UAAL,CACJC,WADI,GAEJG,IAFI,CAEC,UAACF,QAAD;AAAA,eAAmBA,QAAQ,CAACQ,IAAT,CAAc,cAAd,EAA8BN,IAA9B,CAAmC,UAACC,QAAD;AAAA,iBAAgCA,QAAQ,CAAC,CAAD,CAAxC;AAAA,SAAnC,CAAnB;AAAA,OAFD,CAAP;AAGD,KAjDH;AAAA;AAAA;AAAA;;AAAA,SAmDSO,UAnDT,GAmDS,wBAnDT;;AAAA;AAAA,EAAyCC,iBAAzC;;;;"}