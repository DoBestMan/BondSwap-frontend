{"version":3,"file":"walletlink-connector.cjs.development.js","sources":["../src/index.ts"],"sourcesContent":["import { ConnectorUpdate } from '@web3-react/types'\nimport { AbstractConnector } from '@web3-react/abstract-connector'\n\nconst CHAIN_ID = 1\n\ninterface WalletLinkConnectorArguments {\n  url: string\n  appName: string\n  appLogoUrl?: string\n  darkMode?: boolean\n}\n\nexport class WalletLinkConnector extends AbstractConnector {\n  private readonly url: string\n  private readonly appName: string\n  private readonly appLogoUrl?: string\n  private readonly darkMode: boolean\n\n  public walletLink: any\n  private provider: any\n\n  constructor({ url, appName, appLogoUrl, darkMode }: WalletLinkConnectorArguments) {\n    super({ supportedChainIds: [CHAIN_ID] })\n\n    this.url = url\n    this.appName = appName\n    this.appLogoUrl = appLogoUrl\n    this.darkMode = darkMode || false\n  }\n\n  public async activate(): Promise<ConnectorUpdate> {\n    if (!this.walletLink) {\n      const WalletLink = await import('walletlink').then(m => m?.default ?? m)\n      this.walletLink = new WalletLink({\n        appName: this.appName,\n        darkMode: this.darkMode,\n        ...(this.appLogoUrl ? { appLogoUrl: this.appLogoUrl } : {})\n      })\n      this.provider = this.walletLink.makeWeb3Provider(this.url, CHAIN_ID)\n    }\n\n    const account = await this.provider.send('eth_requestAccounts').then((accounts: string[]): string => accounts[0])\n\n    return { provider: this.provider, chainId: CHAIN_ID, account: account }\n  }\n\n  public async getProvider(): Promise<any> {\n    return this.provider\n  }\n\n  public async getChainId(): Promise<number> {\n    return CHAIN_ID\n  }\n\n  public async getAccount(): Promise<null | string> {\n    return this.provider.send('eth_accounts').then((accounts: string[]): string => accounts[0])\n  }\n\n  public deactivate() {}\n\n  public async close() {\n    this.provider.close()\n    this.emitDeactivate()\n  }\n}\n"],"names":["CHAIN_ID","WalletLinkConnector","url","appName","appLogoUrl","darkMode","supportedChainIds","activate","provider","send","then","accounts","account","chainId","walletLink","m","WalletLink","makeWeb3Provider","getProvider","getChainId","getAccount","deactivate","close","emitDeactivate","AbstractConnector"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAGA,IAAMA,QAAQ,GAAG,CAAjB;IASaC,mBAAb;AAAA;;AASE;;;QAAcC,WAAAA;QAAKC,eAAAA;QAASC,kBAAAA;QAAYC,gBAAAA;AACtC,0CAAM;AAAEC,MAAAA,iBAAiB,EAAE,CAACN,QAAD;AAArB,KAAN;AAEA,UAAKE,GAAL,GAAWA,GAAX;AACA,UAAKC,OAAL,GAAeA,OAAf;AACA,UAAKC,UAAL,GAAkBA,UAAlB;AACA,UAAKC,QAAL,GAAgBA,QAAQ,IAAI,KAA5B;;AACD;;AAhBH;;AAAA,SAkBeE,QAlBf;AAAA;mBAmBS;;;+BAUiB,OAAKC,QAAL,CAAcC,IAAd,CAAmB,qBAAnB,EAA0CC,IAA1C,CAA+C,UAACC,QAAD;AAAA,iBAAgCA,QAAQ,CAAC,CAAD,CAAxC;AAAA,SAA/C,kBAAhBC;AAEN,iBAAO;AAAEJ,YAAAA,QAAQ,EAAE,OAAKA,QAAjB;AAA2BK,YAAAA,OAAO,EAAEb,QAApC;AAA8CY,YAAAA,OAAO,EAAEA;AAAvD,WAAP;;;;;YAZI,CAAC,OAAKE;iCACiB,mEAAO,YAAP,QAAqBJ,IAArB,CAA0B,UAAAK,CAAC;AAAA;;AAAA,iCAAIA,CAAJ,oBAAIA,CAAC,WAAL,yBAAkBA,CAAlB;AAAA,WAA3B,kBAAnBC;AACN,mBAAKF,UAAL,GAAkB,IAAIE,UAAJ;AAChBb,cAAAA,OAAO,EAAE,OAAKA,OADE;AAEhBE,cAAAA,QAAQ,EAAE,OAAKA;AAFC,eAGZ,OAAKD,UAAL,GAAkB;AAAEA,cAAAA,UAAU,EAAE,OAAKA;AAAnB,aAAlB,GAAoD,EAHxC,EAAlB;AAKA,mBAAKI,QAAL,GAAgB,OAAKM,UAAL,CAAgBG,gBAAhB,CAAiC,OAAKf,GAAtC,EAA2CF,QAA3C,CAAhB;;;;;;AAMH,KAhCH;AAAA;AAAA;AAAA;;AAAA,SAkCekB,WAlCf;AAAA;mBAmCW;;AAAP,6BAAO,OAAKV,QAAZ;AACD,KApCH;AAAA;AAAA;AAAA;;AAAA,SAsCeW,UAtCf;AAuCI,2BAAOnB,QAAP;AACD,GAxCH;;AAAA,SA0CeoB,UA1Cf;AAAA;mBA2CW;;AAAP,6BAAO,OAAKZ,QAAL,CAAcC,IAAd,CAAmB,cAAnB,EAAmCC,IAAnC,CAAwC,UAACC,QAAD;AAAA,eAAgCA,QAAQ,CAAC,CAAD,CAAxC;AAAA,OAAxC,CAAP;AACD,KA5CH;AAAA;AAAA;AAAA;;AAAA,SA8CSU,UA9CT,GA8CS,wBA9CT;;AAAA,SAgDeC,KAhDf;AAAA;mBAiDI;;AAAA,aAAKd,QAAL,CAAcc,KAAd;;AACA,aAAKC,cAAL;;;AACD,KAnDH;AAAA;AAAA;AAAA;;AAAA;AAAA,EAAyCC,mCAAzC;;;;"}