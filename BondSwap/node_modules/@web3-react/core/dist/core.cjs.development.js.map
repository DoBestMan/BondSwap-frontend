{"version":3,"file":"core.cjs.development.js","sources":["../../../node_modules/babel-plugin-transform-async-to-promises/helpers.js","../src/normalizers.ts","../src/manager.ts","../src/provider.tsx"],"sourcesContent":["// A type of promise-like that resolves synchronously and supports only one observer\nexport const _Pact = /*#__PURE__*/(function() {\n\tfunction _Pact() {}\n\t_Pact.prototype.then = function(onFulfilled, onRejected) {\n\t\tconst result = new _Pact();\n\t\tconst state = this.s;\n\t\tif (state) {\n\t\t\tconst callback = state & 1 ? onFulfilled : onRejected;\n\t\t\tif (callback) {\n\t\t\t\ttry {\n\t\t\t\t\t_settle(result, 1, callback(this.v));\n\t\t\t\t} catch (e) {\n\t\t\t\t\t_settle(result, 2, e);\n\t\t\t\t}\n\t\t\t\treturn result;\n\t\t\t} else {\n\t\t\t\treturn this;\n\t\t\t}\n\t\t}\n\t\tthis.o = function(_this) {\n\t\t\ttry {\n\t\t\t\tconst value = _this.v;\n\t\t\t\tif (_this.s & 1) {\n\t\t\t\t\t_settle(result, 1, onFulfilled ? onFulfilled(value) : value);\n\t\t\t\t} else if (onRejected) {\n\t\t\t\t\t_settle(result, 1, onRejected(value));\n\t\t\t\t} else {\n\t\t\t\t\t_settle(result, 2, value);\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\t_settle(result, 2, e);\n\t\t\t}\n\t\t};\n\t\treturn result;\n\t}\n\treturn _Pact;\n})();\n\n// Settles a pact synchronously\nexport function _settle(pact, state, value) {\n\tif (!pact.s) {\n\t\tif (value instanceof _Pact) {\n\t\t\tif (value.s) {\n\t\t\t\tif (state & 1) {\n\t\t\t\t\tstate = value.s;\n\t\t\t\t}\n\t\t\t\tvalue = value.v;\n\t\t\t} else {\n\t\t\t\tvalue.o = _settle.bind(null, pact, state);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\tif (value && value.then) {\n\t\t\tvalue.then(_settle.bind(null, pact, state), _settle.bind(null, pact, 2));\n\t\t\treturn;\n\t\t}\n\t\tpact.s = state;\n\t\tpact.v = value;\n\t\tconst observer = pact.o;\n\t\tif (observer) {\n\t\t\tobserver(pact);\n\t\t}\n\t}\n}\n\nexport function _isSettledPact(thenable) {\n\treturn thenable instanceof _Pact && thenable.s & 1;\n}\n\n// Converts argument to a function that always returns a Promise\nexport function _async(f) {\n\treturn function() {\n\t\tfor (var args = [], i = 0; i < arguments.length; i++) {\n\t\t\targs[i] = arguments[i];\n\t\t}\n\t\ttry {\n\t\t\treturn Promise.resolve(f.apply(this, args));\n\t\t} catch(e) {\n\t\t\treturn Promise.reject(e);\n\t\t}\n\t}\n}\n\n// Awaits on a value that may or may not be a Promise (equivalent to the await keyword in ES2015, with continuations passed explicitly)\nexport function _await(value, then, direct) {\n\tif (direct) {\n\t\treturn then ? then(value) : value;\n\t}\n\tif (!value || !value.then) {\n\t\tvalue = Promise.resolve(value);\n\t}\n\treturn then ? value.then(then) : value;\n}\n\n// Awaits on a value that may or may not be a Promise, then ignores it\nexport function _awaitIgnored(value, direct) {\n\tif (!direct) {\n\t\treturn value && value.then ? value.then(_empty) : Promise.resolve();\n\t}\n}\n\n// Proceeds after a value has resolved, or proceeds immediately if the value is not thenable\nexport function _continue(value, then) {\n\treturn value && value.then ? value.then(then) : then(value);\n}\n\n// Proceeds after a value has resolved, or proceeds immediately if the value is not thenable\nexport function _continueIgnored(value) {\n\tif (value && value.then) {\n\t\treturn value.then(_empty);\n\t}\n}\n\n// Asynchronously iterate through an object that has a length property, passing the index as the first argument to the callback (even as the length property changes)\nexport function _forTo(array, body, check) {\n\tvar i = -1, pact, reject;\n\tfunction _cycle(result) {\n\t\ttry {\n\t\t\twhile (++i < array.length && (!check || !check())) {\n\t\t\t\tresult = body(i);\n\t\t\t\tif (result && result.then) {\n\t\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\t\tresult = result.v;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresult.then(_cycle, reject || (reject = _settle.bind(null, pact = new _Pact(), 2)));\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (pact) {\n\t\t\t\t_settle(pact, 1, result);\n\t\t\t} else {\n\t\t\t\tpact = result;\n\t\t\t}\n\t\t} catch (e) {\n\t\t\t_settle(pact || (pact = new _Pact()), 2, e);\n\t\t}\n\t}\n\t_cycle();\n\treturn pact;\n}\n\n// Asynchronously iterate through an object's properties (including properties inherited from the prototype)\n// Uses a snapshot of the object's properties\nexport function _forIn(target, body, check) {\n\tvar keys = [];\n\tfor (var key in target) {\n\t\tkeys.push(key);\n\t}\n\treturn _forTo(keys, function(i) { return body(keys[i]); }, check);\n}\n\n// Asynchronously iterate through an object's own properties (excluding properties inherited from the prototype)\n// Uses a snapshot of the object's properties\nexport function _forOwn(target, body, check) {\n\tvar keys = [];\n\tfor (var key in target) {\n\t\tif (Object.prototype.hasOwnProperty.call(target, key)) {\n\t\t\tkeys.push(key);\n\t\t}\n\t}\n\treturn _forTo(keys, function(i) { return body(keys[i]); }, check);\n}\n\nexport const _iteratorSymbol = /*#__PURE__*/ typeof Symbol !== \"undefined\" ? (Symbol.iterator || (Symbol.iterator = Symbol(\"Symbol.iterator\"))) : \"@@iterator\";\n\n// Asynchronously iterate through an object's values\n// Uses for...of if the runtime supports it, otherwise iterates until length on a copy\nexport function _forOf(target, body, check) {\n\tif (typeof target[_iteratorSymbol] === \"function\") {\n\t\tvar iterator = target[_iteratorSymbol](), step, pact, reject;\n\t\tfunction _cycle(result) {\n\t\t\ttry {\n\t\t\t\twhile (!(step = iterator.next()).done && (!check || !check())) {\n\t\t\t\t\tresult = body(step.value);\n\t\t\t\t\tif (result && result.then) {\n\t\t\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\t\t\tresult = result.v;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tresult.then(_cycle, reject || (reject = _settle.bind(null, pact = new _Pact(), 2)));\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (pact) {\n\t\t\t\t\t_settle(pact, 1, result);\n\t\t\t\t} else {\n\t\t\t\t\tpact = result;\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\t_settle(pact || (pact = new _Pact()), 2, e);\n\t\t\t}\n\t\t}\n\t\t_cycle();\n\t\tif (iterator.return) {\n\t\t\tvar _fixup = function(value) {\n\t\t\t\ttry {\n\t\t\t\t\tif (!step.done) {\n\t\t\t\t\t\titerator.return();\n\t\t\t\t\t}\n\t\t\t\t} catch(e) {\n\t\t\t\t}\n\t\t\t\treturn value;\n\t\t\t}\n\t\t\tif (pact && pact.then) {\n\t\t\t\treturn pact.then(_fixup, function(e) {\n\t\t\t\t\tthrow _fixup(e);\n\t\t\t\t});\n\t\t\t}\n\t\t\t_fixup();\n\t\t}\n\t\treturn pact;\n\t}\n\t// No support for Symbol.iterator\n\tif (!(\"length\" in target)) {\n\t\tthrow new TypeError(\"Object is not iterable\");\n\t}\n\t// Handle live collections properly\n\tvar values = [];\n\tfor (var i = 0; i < target.length; i++) {\n\t\tvalues.push(target[i]);\n\t}\n\treturn _forTo(values, function(i) { return body(values[i]); }, check);\n}\n\nexport const _asyncIteratorSymbol = /*#__PURE__*/ typeof Symbol !== \"undefined\" ? (Symbol.asyncIterator || (Symbol.asyncIterator = Symbol(\"Symbol.asyncIterator\"))) : \"@@asyncIterator\";\n\n// Asynchronously iterate on a value using it's async iterator if present, or its synchronous iterator if missing\nexport function _forAwaitOf(target, body, check) {\n\tif (typeof target[_asyncIteratorSymbol] === \"function\") {\n\t\tvar pact = new _Pact();\n\t\tvar iterator = target[_asyncIteratorSymbol]();\n\t\titerator.next().then(_resumeAfterNext).then(void 0, _reject);\n\t\treturn pact;\n\t\tfunction _resumeAfterBody(result) {\n\t\t\tif (check && check()) {\n\t\t\t\treturn _settle(pact, 1, iterator.return ? iterator.return().then(function() { return result; }) : result);\n\t\t\t}\n\t\t\titerator.next().then(_resumeAfterNext).then(void 0, _reject);\n\t\t}\n\t\tfunction _resumeAfterNext(step) {\n\t\t\tif (step.done) {\n\t\t\t\t_settle(pact, 1);\n\t\t\t} else {\n\t\t\t\tPromise.resolve(body(step.value)).then(_resumeAfterBody).then(void 0, _reject);\n\t\t\t}\n\t\t}\n\t\tfunction _reject(error) {\n\t\t\t_settle(pact, 2, iterator.return ? iterator.return().then(function() { return error; }) : error);\n\t\t}\n\t}\n\treturn Promise.resolve(_forOf(target, function(value) { return Promise.resolve(value).then(body); }, check));\n}\n\n// Asynchronously implement a generic for loop\nexport function _for(test, update, body) {\n\tvar stage;\n\tfor (;;) {\n\t\tvar shouldContinue = test();\n\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\tshouldContinue = shouldContinue.v;\n\t\t}\n\t\tif (!shouldContinue) {\n\t\t\treturn result;\n\t\t}\n\t\tif (shouldContinue.then) {\n\t\t\tstage = 0;\n\t\t\tbreak;\n\t\t}\n\t\tvar result = body();\n\t\tif (result && result.then) {\n\t\t\tif (_isSettledPact(result)) {\n\t\t\t\tresult = result.s;\n\t\t\t} else {\n\t\t\t\tstage = 1;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (update) {\n\t\t\tvar updateValue = update();\n\t\t\tif (updateValue && updateValue.then && !_isSettledPact(updateValue)) {\n\t\t\t\tstage = 2;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\tvar pact = new _Pact();\n\tvar reject = _settle.bind(null, pact, 2);\n\t(stage === 0 ? shouldContinue.then(_resumeAfterTest) : stage === 1 ? result.then(_resumeAfterBody) : updateValue.then(_resumeAfterUpdate)).then(void 0, reject);\n\treturn pact;\n\tfunction _resumeAfterBody(value) {\n\t\tresult = value;\n\t\tdo {\n\t\t\tif (update) {\n\t\t\t\tupdateValue = update();\n\t\t\t\tif (updateValue && updateValue.then && !_isSettledPact(updateValue)) {\n\t\t\t\t\tupdateValue.then(_resumeAfterUpdate).then(void 0, reject);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\tshouldContinue = test();\n\t\t\tif (!shouldContinue || (_isSettledPact(shouldContinue) && !shouldContinue.v)) {\n\t\t\t\t_settle(pact, 1, result);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (shouldContinue.then) {\n\t\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tresult = body();\n\t\t\tif (_isSettledPact(result)) {\n\t\t\t\tresult = result.v;\n\t\t\t}\n\t\t} while (!result || !result.then);\n\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t}\n\tfunction _resumeAfterTest(shouldContinue) {\n\t\tif (shouldContinue) {\n\t\t\tresult = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t} else {\n\t\t\t\t_resumeAfterBody(result);\n\t\t\t}\n\t\t} else {\n\t\t\t_settle(pact, 1, result);\n\t\t}\n\t}\n\tfunction _resumeAfterUpdate() {\n\t\tif (shouldContinue = test()) {\n\t\t\tif (shouldContinue.then) {\n\t\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t} else {\n\t\t\t\t_resumeAfterTest(shouldContinue);\n\t\t\t}\n\t\t} else {\n\t\t\t_settle(pact, 1, result);\n\t\t}\n\t}\n}\n\n// Asynchronously implement a do ... while loop\nexport function _do(body, test) {\n\tvar awaitBody;\n\tdo {\n\t\tvar result = body();\n\t\tif (result && result.then) {\n\t\t\tif (_isSettledPact(result)) {\n\t\t\t\tresult = result.v;\n\t\t\t} else {\n\t\t\t\tawaitBody = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tvar shouldContinue = test();\n\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\tshouldContinue = shouldContinue.v;\n\t\t}\n\t\tif (!shouldContinue) {\n\t\t\treturn result;\n\t\t}\n\t} while (!shouldContinue.then);\n\tconst pact = new _Pact();\n\tconst reject = _settle.bind(null, pact, 2);\n\t(awaitBody ? result.then(_resumeAfterBody) : shouldContinue.then(_resumeAfterTest)).then(void 0, reject);\n\treturn pact;\n\tfunction _resumeAfterBody(value) {\n\t\tresult = value;\n\t\tfor (;;) {\n\t\t\tshouldContinue = test();\n\t\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\t\tshouldContinue = shouldContinue.v;\n\t\t\t}\n\t\t\tif (!shouldContinue) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (shouldContinue.then) {\n\t\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tresult = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\tresult = result.v;\n\t\t\t\t} else {\n\t\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t_settle(pact, 1, result);\n\t}\n\tfunction _resumeAfterTest(shouldContinue) {\n\t\tif (shouldContinue) {\n\t\t\tdo {\n\t\t\t\tresult = body();\n\t\t\t\tif (result && result.then) {\n\t\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\t\tresult = result.v;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tshouldContinue = test();\n\t\t\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\t\t\tshouldContinue = shouldContinue.v;\n\t\t\t\t}\n\t\t\t\tif (!shouldContinue) {\n\t\t\t\t\t_settle(pact, 1, result);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t} while (!shouldContinue.then);\n\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t} else {\n\t\t\t_settle(pact, 1, result);\n\t\t}\n\t}\n}\n\n// Asynchronously implement a switch statement\nexport function _switch(discriminant, cases) {\n\tvar dispatchIndex = -1;\n\tvar awaitBody;\n\touter: {\n\t\tfor (var i = 0; i < cases.length; i++) {\n\t\t\tvar test = cases[i][0];\n\t\t\tif (test) {\n\t\t\t\tvar testValue = test();\n\t\t\t\tif (testValue && testValue.then) {\n\t\t\t\t\tbreak outer;\n\t\t\t\t}\n\t\t\t\tif (testValue === discriminant) {\n\t\t\t\t\tdispatchIndex = i;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// Found the default case, set it as the pending dispatch case\n\t\t\t\tdispatchIndex = i;\n\t\t\t}\n\t\t}\n\t\tif (dispatchIndex !== -1) {\n\t\t\tdo {\n\t\t\t\tvar body = cases[dispatchIndex][1];\n\t\t\t\twhile (!body) {\n\t\t\t\t\tdispatchIndex++;\n\t\t\t\t\tbody = cases[dispatchIndex][1];\n\t\t\t\t}\n\t\t\t\tvar result = body();\n\t\t\t\tif (result && result.then) {\n\t\t\t\t\tawaitBody = true;\n\t\t\t\t\tbreak outer;\n\t\t\t\t}\n\t\t\t\tvar fallthroughCheck = cases[dispatchIndex][2];\n\t\t\t\tdispatchIndex++;\n\t\t\t} while (fallthroughCheck && !fallthroughCheck());\n\t\t\treturn result;\n\t\t}\n\t}\n\tconst pact = new _Pact();\n\tconst reject = _settle.bind(null, pact, 2);\n\t(awaitBody ? result.then(_resumeAfterBody) : testValue.then(_resumeAfterTest)).then(void 0, reject);\n\treturn pact;\n\tfunction _resumeAfterTest(value) {\n\t\tfor (;;) {\n\t\t\tif (value === discriminant) {\n\t\t\t\tdispatchIndex = i;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (++i === cases.length) {\n\t\t\t\tif (dispatchIndex !== -1) {\n\t\t\t\t\tbreak;\n\t\t\t\t} else {\n\t\t\t\t\t_settle(pact, 1, result);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\ttest = cases[i][0];\n\t\t\tif (test) {\n\t\t\t\tvalue = test();\n\t\t\t\tif (value && value.then) {\n\t\t\t\t\tvalue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tdispatchIndex = i;\n\t\t\t}\n\t\t}\n\t\tdo {\n\t\t\tvar body = cases[dispatchIndex][1];\n\t\t\twhile (!body) {\n\t\t\t\tdispatchIndex++;\n\t\t\t\tbody = cases[dispatchIndex][1];\n\t\t\t}\n\t\t\tvar result = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tvar fallthroughCheck = cases[dispatchIndex][2];\n\t\t\tdispatchIndex++;\n\t\t} while (fallthroughCheck && !fallthroughCheck());\n\t\t_settle(pact, 1, result);\n\t}\n\tfunction _resumeAfterBody(result) {\n\t\tfor (;;) {\n\t\t\tvar fallthroughCheck = cases[dispatchIndex][2];\n\t\t\tif (!fallthroughCheck || fallthroughCheck()) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tdispatchIndex++;\n\t\t\tvar body = cases[dispatchIndex][1];\n\t\t\twhile (!body) {\n\t\t\t\tdispatchIndex++;\n\t\t\t\tbody = cases[dispatchIndex][1];\n\t\t\t}\n\t\t\tresult = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\t_settle(pact, 1, result);\n\t}\n}\n\n// Asynchronously call a function and pass the result to explicitly passed continuations\nexport function _call(body, then, direct) {\n\tif (direct) {\n\t\treturn then ? then(body()) : body();\n\t}\n\ttry {\n\t\tvar result = Promise.resolve(body());\n\t\treturn then ? result.then(then) : result;\n\t} catch (e) {\n\t\treturn Promise.reject(e);\n\t}\n}\n\n// Asynchronously call a function and swallow the result\nexport function _callIgnored(body, direct) {\n\treturn _call(body, _empty, direct);\n}\n\n// Asynchronously call a function and pass the result to explicitly passed continuations\nexport function _invoke(body, then) {\n\tvar result = body();\n\tif (result && result.then) {\n\t\treturn result.then(then);\n\t}\n\treturn then(result);\n}\n\n// Asynchronously call a function and swallow the result\nexport function _invokeIgnored(body) {\n\tvar result = body();\n\tif (result && result.then) {\n\t\treturn result.then(_empty);\n\t}\n}\n\n// Asynchronously call a function and send errors to recovery continuation\nexport function _catch(body, recover) {\n\ttry {\n\t\tvar result = body();\n\t} catch(e) {\n\t\treturn recover(e);\n\t}\n\tif (result && result.then) {\n\t\treturn result.then(void 0, recover);\n\t}\n\treturn result;\n}\n\n// Asynchronously await a promise and pass the result to a finally continuation\nexport function _finallyRethrows(body, finalizer) {\n\ttry {\n\t\tvar result = body();\n\t} catch (e) {\n\t\treturn finalizer(true, e);\n\t}\n\tif (result && result.then) {\n\t\treturn result.then(finalizer.bind(null, false), finalizer.bind(null, true));\n\t}\n\treturn finalizer(false, result);\n}\n\n// Asynchronously await a promise and invoke a finally continuation that always overrides the result\nexport function _finally(body, finalizer) {\n\ttry {\n\t\tvar result = body();\n\t} catch (e) {\n\t\treturn finalizer();\n\t}\n\tif (result && result.then) {\n\t\treturn result.then(finalizer, finalizer);\n\t}\n\treturn finalizer();\n}\n\n// Rethrow or return a value from a finally continuation\nexport function _rethrow(thrown, value) {\n\tif (thrown)\n\t\tthrow value;\n\treturn value;\n}\n\n// Empty function to implement break and other control flow that ignores asynchronous results\nexport function _empty() {\n}\n\n// Sentinel value for early returns in generators \nexport const _earlyReturn = /*#__PURE__*/ {};\n\n// Asynchronously call a function and send errors to recovery continuation, skipping early returns\nexport function _catchInGenerator(body, recover) {\n\treturn _catch(body, function(e) {\n\t\tif (e === _earlyReturn) {\n\t\t\tthrow e;\n\t\t}\n\t\treturn recover(e);\n\t});\n}\n\n// Asynchronous generator class; accepts the entrypoint of the generator, to which it passes itself when the generator should start\nexport const _AsyncGenerator = /*#__PURE__*/(function() {\n\tfunction _AsyncGenerator(entry) {\n\t\tthis._entry = entry;\n\t\tthis._pact = null;\n\t\tthis._resolve = null;\n\t\tthis._return = null;\n\t\tthis._promise = null;\n\t}\n\n\tfunction _wrapReturnedValue(value) {\n\t\treturn { value: value, done: true };\n\t}\n\tfunction _wrapYieldedValue(value) {\n\t\treturn { value: value, done: false };\n\t}\n\n\t_AsyncGenerator.prototype._yield = function(value) {\n\t\t// Yield the value to the pending next call\n\t\tthis._resolve(value && value.then ? value.then(_wrapYieldedValue) : _wrapYieldedValue(value));\n\t\t// Return a pact for an upcoming next/return/throw call\n\t\treturn this._pact = new _Pact();\n\t};\n\t_AsyncGenerator.prototype.next = function(value) {\n\t\t// Advance the generator, starting it if it has yet to be started\n\t\tconst _this = this;\n\t\treturn _this._promise = new Promise(function (resolve) {\n\t\t\tconst _pact = _this._pact;\n\t\t\tif (_pact === null) {\n\t\t\t\tconst _entry = _this._entry;\n\t\t\t\tif (_entry === null) {\n\t\t\t\t\t// Generator is started, but not awaiting a yield expression\n\t\t\t\t\t// Abandon the next call!\n\t\t\t\t\treturn resolve(_this._promise);\n\t\t\t\t}\n\t\t\t\t// Start the generator\n\t\t\t\t_this._entry = null;\n\t\t\t\t_this._resolve = resolve;\n\t\t\t\tfunction returnValue(value) {\n\t\t\t\t\t_this._resolve(value && value.then ? value.then(_wrapReturnedValue) : _wrapReturnedValue(value));\n\t\t\t\t\t_this._pact = null;\n\t\t\t\t\t_this._resolve = null;\n\t\t\t\t}\n\t\t\t\tvar result = _entry(_this);\n\t\t\t\tif (result && result.then) {\n\t\t\t\t\tresult.then(returnValue, function(error) {\n\t\t\t\t\t\tif (error === _earlyReturn) {\n\t\t\t\t\t\t\treturnValue(_this._return);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tconst pact = new _Pact();\n\t\t\t\t\t\t\t_this._resolve(pact);\n\t\t\t\t\t\t\t_this._pact = null;\n\t\t\t\t\t\t\t_this._resolve = null;\n\t\t\t\t\t\t\t_resolve(pact, 2, error);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\treturnValue(result);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// Generator is started and a yield expression is pending, settle it\n\t\t\t\t_this._pact = null;\n\t\t\t\t_this._resolve = resolve;\n\t\t\t\t_settle(_pact, 1, value);\n\t\t\t}\n\t\t});\n\t};\n\t_AsyncGenerator.prototype.return = function(value) {\n\t\t// Early return from the generator if started, otherwise abandons the generator\n\t\tconst _this = this;\n\t\treturn _this._promise = new Promise(function (resolve) {\n\t\t\tconst _pact = _this._pact;\n\t\t\tif (_pact === null) {\n\t\t\t\tif (_this._entry === null) {\n\t\t\t\t\t// Generator is started, but not awaiting a yield expression\n\t\t\t\t\t// Abandon the return call!\n\t\t\t\t\treturn resolve(_this._promise);\n\t\t\t\t}\n\t\t\t\t// Generator is not started, abandon it and return the specified value\n\t\t\t\t_this._entry = null;\n\t\t\t\treturn resolve(value && value.then ? value.then(_wrapReturnedValue) : _wrapReturnedValue(value));\n\t\t\t}\n\t\t\t// Settle the yield expression with a rejected \"early return\" value\n\t\t\t_this._return = value;\n\t\t\t_this._resolve = resolve;\n\t\t\t_this._pact = null;\n\t\t\t_settle(_pact, 2, _earlyReturn);\n\t\t});\n\t};\n\t_AsyncGenerator.prototype.throw = function(error) {\n\t\t// Inject an exception into the pending yield expression\n\t\tconst _this = this;\n\t\treturn _this._promise = new Promise(function (resolve, reject) {\n\t\t\tconst _pact = _this._pact;\n\t\t\tif (_pact === null) {\n\t\t\t\tif (_this._entry === null) {\n\t\t\t\t\t// Generator is started, but not awaiting a yield expression\n\t\t\t\t\t// Abandon the throw call!\n\t\t\t\t\treturn resolve(_this._promise);\n\t\t\t\t}\n\t\t\t\t// Generator is not started, abandon it and return a rejected Promise containing the error\n\t\t\t\t_this._entry = null;\n\t\t\t\treturn reject(error);\n\t\t\t}\n\t\t\t// Settle the yield expression with the value as a rejection\n\t\t\t_this._resolve = resolve;\n\t\t\t_this._pact = null;\n\t\t\t_settle(_pact, 2, error);\n\t\t});\n\t};\n\n\t_AsyncGenerator.prototype[_asyncIteratorSymbol] = function() {\n\t\treturn this;\n\t};\n\t\n\treturn _AsyncGenerator;\n})();\n","import { arrayify } from '@ethersproject/bytes'\nimport { keccak256 } from '@ethersproject/keccak256'\nimport invariant from 'tiny-invariant'\n\nexport function normalizeChainId(chainId: string | number): number {\n  if (typeof chainId === 'string') {\n    // Temporary fix until the next version of Metamask Mobile gets released.\n    // In the current version (0.2.13), the chainId starts with “Ox” rather\n    // than “0x”. Fix: https://github.com/MetaMask/metamask-mobile/pull/1275\n    chainId = chainId.replace(/^Ox/, '0x')\n\n    const parsedChainId = Number.parseInt(chainId, chainId.trim().substring(0, 2) === '0x' ? 16 : 10)\n    invariant(!Number.isNaN(parsedChainId), `chainId ${chainId} is not an integer`)\n    return parsedChainId\n  } else {\n    invariant(Number.isInteger(chainId), `chainId ${chainId} is not an integer`)\n    return chainId\n  }\n}\n\n// https://github.com/ethers-io/ethers.js/blob/d9d438a119bb11f8516fc9cf02c534ab3816fcb3/packages/address/src.ts/index.ts\nexport function normalizeAccount(_address: string): string {\n  invariant(typeof _address === 'string' && _address.match(/^(0x)?[0-9a-fA-F]{40}$/), `Invalid address ${_address}`)\n\n  const address = _address.substring(0, 2) === '0x' ? _address : `0x${_address}`\n  const chars = address\n    .toLowerCase()\n    .substring(2)\n    .split('')\n\n  const charsArray = new Uint8Array(40)\n  for (let i = 0; i < 40; i++) {\n    charsArray[i] = chars[i].charCodeAt(0)\n  }\n  const hashed = arrayify(keccak256(charsArray))\n\n  for (let i = 0; i < 40; i += 2) {\n    if (hashed[i >> 1] >> 4 >= 8) {\n      chars[i] = chars[i].toUpperCase()\n    }\n    if ((hashed[i >> 1] & 0x0f) >= 8) {\n      chars[i + 1] = chars[i + 1].toUpperCase()\n    }\n  }\n\n  const addressChecksum = `0x${chars.join('')}`\n\n  invariant(\n    !(address.match(/([A-F].*[a-f])|([a-f].*[A-F])/) && address !== addressChecksum),\n    `Bad address checksum ${address} ${addressChecksum}`\n  )\n\n  return addressChecksum\n}\n","import { useReducer, useEffect, useCallback, useRef } from 'react'\nimport { ConnectorUpdate, ConnectorEvent } from '@web3-react/types'\nimport { AbstractConnector } from '@web3-react/abstract-connector'\nimport warning from 'tiny-warning'\n\nimport { Web3ReactManagerReturn } from './types'\nimport { normalizeChainId, normalizeAccount } from './normalizers'\n\nclass StaleConnectorError extends Error {\n  constructor() {\n    super()\n    this.name = this.constructor.name\n  }\n}\n\nexport class UnsupportedChainIdError extends Error {\n  public constructor(unsupportedChainId: number, supportedChainIds?: readonly number[]) {\n    super()\n    this.name = this.constructor.name\n    this.message = `Unsupported chain id: ${unsupportedChainId}. Supported chain ids are: ${supportedChainIds}.`\n  }\n}\n\ninterface Web3ReactManagerState {\n  connector?: AbstractConnector\n  provider?: any\n  chainId?: number\n  account?: null | string\n\n  onError?: (error: Error) => void\n\n  error?: Error\n}\n\nenum ActionType {\n  ACTIVATE_CONNECTOR,\n  UPDATE,\n  UPDATE_FROM_ERROR,\n  ERROR,\n  ERROR_FROM_ACTIVATION,\n  DEACTIVATE_CONNECTOR\n}\n\ninterface Action {\n  type: ActionType\n  payload?: any\n}\n\nfunction reducer(state: Web3ReactManagerState, { type, payload }: Action): Web3ReactManagerState {\n  switch (type) {\n    case ActionType.ACTIVATE_CONNECTOR: {\n      const { connector, provider, chainId, account, onError } = payload\n      return { connector, provider, chainId, account, onError }\n    }\n    case ActionType.UPDATE: {\n      const { provider, chainId, account } = payload\n      return {\n        ...state,\n        ...(provider === undefined ? {} : { provider }),\n        ...(chainId === undefined ? {} : { chainId }),\n        ...(account === undefined ? {} : { account })\n      }\n    }\n    case ActionType.UPDATE_FROM_ERROR: {\n      const { provider, chainId, account } = payload\n      return {\n        ...state,\n        ...(provider === undefined ? {} : { provider }),\n        ...(chainId === undefined ? {} : { chainId }),\n        ...(account === undefined ? {} : { account }),\n        error: undefined\n      }\n    }\n    case ActionType.ERROR: {\n      const { error } = payload\n      const { connector, onError } = state\n      return {\n        connector,\n        error,\n        onError\n      }\n    }\n    case ActionType.ERROR_FROM_ACTIVATION: {\n      const { connector, error } = payload\n      return {\n        connector,\n        error\n      }\n    }\n    case ActionType.DEACTIVATE_CONNECTOR: {\n      return {}\n    }\n  }\n}\n\nasync function augmentConnectorUpdate(\n  connector: AbstractConnector,\n  update: ConnectorUpdate\n): Promise<ConnectorUpdate<number>> {\n  const provider = update.provider === undefined ? await connector.getProvider() : update.provider\n  const [_chainId, _account] = (await Promise.all([\n    update.chainId === undefined ? connector.getChainId() : update.chainId,\n    update.account === undefined ? connector.getAccount() : update.account\n  ])) as [Required<ConnectorUpdate>['chainId'], Required<ConnectorUpdate>['account']]\n\n  const chainId = normalizeChainId(_chainId)\n  if (!!connector.supportedChainIds && !connector.supportedChainIds.includes(chainId)) {\n    throw new UnsupportedChainIdError(chainId, connector.supportedChainIds)\n  }\n  const account = _account === null ? _account : normalizeAccount(_account)\n\n  return { provider, chainId, account }\n}\n\nexport function useWeb3ReactManager(): Web3ReactManagerReturn {\n  const [state, dispatch] = useReducer(reducer, {})\n  const { connector, provider, chainId, account, onError, error } = state\n\n  const updateBusterRef = useRef(-1)\n  updateBusterRef.current += 1\n\n  const activate = useCallback(\n    async (\n      connector: AbstractConnector,\n      onError?: (error: Error) => void,\n      throwErrors: boolean = false\n    ): Promise<void> => {\n      const updateBusterInitial = updateBusterRef.current\n\n      let activated = false\n      try {\n        const update = await connector.activate().then(\n          (update): ConnectorUpdate => {\n            activated = true\n            return update\n          }\n        )\n\n        const augmentedUpdate = await augmentConnectorUpdate(connector, update)\n\n        if (updateBusterRef.current > updateBusterInitial) {\n          throw new StaleConnectorError()\n        }\n        dispatch({ type: ActionType.ACTIVATE_CONNECTOR, payload: { connector, ...augmentedUpdate, onError } })\n      } catch (error) {\n        if (error instanceof StaleConnectorError) {\n          activated && connector.deactivate()\n          warning(false, `Suppressed stale connector activation ${connector}`)\n        } else if (throwErrors) {\n          activated && connector.deactivate()\n          throw error\n        } else if (onError) {\n          activated && connector.deactivate()\n          onError(error)\n        } else {\n          // we don't call activated && connector.deactivate() here because it'll be handled in the useEffect\n          dispatch({ type: ActionType.ERROR_FROM_ACTIVATION, payload: { connector, error } })\n        }\n      }\n    },\n    []\n  )\n\n  const setError = useCallback((error: Error): void => {\n    dispatch({ type: ActionType.ERROR, payload: { error } })\n  }, [])\n\n  const deactivate = useCallback((): void => {\n    dispatch({ type: ActionType.DEACTIVATE_CONNECTOR })\n  }, [])\n\n  const handleUpdate = useCallback(\n    async (update: ConnectorUpdate): Promise<void> => {\n      if (!connector) {\n        throw Error(\"This should never happen, it's just so Typescript stops complaining\")\n      }\n\n      const updateBusterInitial = updateBusterRef.current\n\n      // updates are handled differently depending on whether the connector is active vs in an error state\n      if (!error) {\n        const chainId = update.chainId === undefined ? undefined : normalizeChainId(update.chainId)\n        if (chainId !== undefined && !!connector.supportedChainIds && !connector.supportedChainIds.includes(chainId)) {\n          const error = new UnsupportedChainIdError(chainId, connector.supportedChainIds)\n          onError ? onError(error) : dispatch({ type: ActionType.ERROR, payload: { error } })\n        } else {\n          const account = typeof update.account === 'string' ? normalizeAccount(update.account) : update.account\n          dispatch({ type: ActionType.UPDATE, payload: { provider: update.provider, chainId, account } })\n        }\n      } else {\n        try {\n          const augmentedUpdate = await augmentConnectorUpdate(connector, update)\n\n          if (updateBusterRef.current > updateBusterInitial) {\n            throw new StaleConnectorError()\n          }\n          dispatch({ type: ActionType.UPDATE_FROM_ERROR, payload: augmentedUpdate })\n        } catch (error) {\n          if (error instanceof StaleConnectorError) {\n            warning(false, `Suppressed stale connector update from error state ${connector} ${update}`)\n          } else {\n            // though we don't have to, we're re-circulating the new error\n            onError ? onError(error) : dispatch({ type: ActionType.ERROR, payload: { error } })\n          }\n        }\n      }\n    },\n    [connector, error, onError]\n  )\n  const handleError = useCallback(\n    (error: Error): void => {\n      onError ? onError(error) : dispatch({ type: ActionType.ERROR, payload: { error } })\n    },\n    [onError]\n  )\n  const handleDeactivate = useCallback((): void => {\n    dispatch({ type: ActionType.DEACTIVATE_CONNECTOR })\n  }, [])\n\n  // ensure that connectors which were set are deactivated\n  useEffect((): (() => void) => {\n    return () => {\n      if (connector) {\n        connector.deactivate()\n      }\n    }\n  }, [connector])\n\n  // ensure that events emitted from the set connector are handled appropriately\n  useEffect((): (() => void) => {\n    if (connector) {\n      connector\n        .on(ConnectorEvent.Update, handleUpdate)\n        .on(ConnectorEvent.Error, handleError)\n        .on(ConnectorEvent.Deactivate, handleDeactivate)\n    }\n\n    return () => {\n      if (connector) {\n        connector\n          .off(ConnectorEvent.Update, handleUpdate)\n          .off(ConnectorEvent.Error, handleError)\n          .off(ConnectorEvent.Deactivate, handleDeactivate)\n      }\n    }\n  }, [connector, handleUpdate, handleError, handleDeactivate])\n\n  return { connector, provider, chainId, account, activate, setError, deactivate, error }\n}\n","import React, { createContext, useContext, useMemo } from 'react'\nimport invariant from 'tiny-invariant'\n\nimport { Web3ReactContextInterface } from './types'\nimport { useWeb3ReactManager } from './manager'\n\nexport const PRIMARY_KEY = 'primary'\nconst CONTEXTS: { [key: string]: React.Context<Web3ReactContextInterface> } = {}\n\ninterface Web3ReactProviderArguments {\n  getLibrary: (provider?: any, connector?: Required<Web3ReactContextInterface>['connector']) => any\n  children: any\n}\n\nexport function createWeb3ReactRoot(key: string): (args: Web3ReactProviderArguments) => JSX.Element {\n  invariant(!CONTEXTS[key], `A root already exists for provided key ${key}`)\n\n  CONTEXTS[key] = createContext<Web3ReactContextInterface>({\n    activate: async () => {\n      invariant(false, 'No <Web3ReactProvider ... /> found.')\n    },\n    setError: () => {\n      invariant(false, 'No <Web3ReactProvider ... /> found.')\n    },\n    deactivate: () => {\n      invariant(false, 'No <Web3ReactProvider ... /> found.')\n    },\n    active: false\n  })\n  CONTEXTS[key].displayName = `Web3ReactContext - ${key}`\n\n  const Provider = CONTEXTS[key].Provider\n\n  return function Web3ReactProvider({ getLibrary, children }: Web3ReactProviderArguments): JSX.Element {\n    const {\n      connector,\n      provider,\n      chainId,\n      account,\n\n      activate,\n      setError,\n      deactivate,\n\n      error\n    } = useWeb3ReactManager()\n\n    const active = connector !== undefined && chainId !== undefined && account !== undefined && !!!error\n    const library = useMemo(\n      () =>\n        active && chainId !== undefined && Number.isInteger(chainId) && !!connector\n          ? getLibrary(provider, connector)\n          : undefined,\n      [active, getLibrary, provider, connector, chainId]\n    )\n\n    const web3ReactContext: Web3ReactContextInterface = {\n      connector,\n      library,\n      chainId,\n      account,\n\n      activate,\n      setError,\n      deactivate,\n\n      active,\n      error\n    }\n\n    return <Provider value={web3ReactContext}>{children}</Provider>\n  }\n}\n\nexport const Web3ReactProvider = createWeb3ReactRoot(PRIMARY_KEY)\n\nexport function getWeb3ReactContext<T = any>(key: string = PRIMARY_KEY): React.Context<Web3ReactContextInterface<T>> {\n  invariant(Object.keys(CONTEXTS).includes(key), `Invalid key ${key}`)\n  return CONTEXTS[key]\n}\n\nexport function useWeb3React<T = any>(key?: string): Web3ReactContextInterface<T> {\n  return useContext(getWeb3ReactContext(key))\n}\n"],"names":["_iteratorSymbol","Symbol","iterator","_asyncIteratorSymbol","asyncIterator","_catch","body","recover","result","e","then","normalizeChainId","chainId","replace","parsedChainId","Number","parseInt","trim","substring","isNaN","invariant","isInteger","normalizeAccount","_address","match","address","chars","toLowerCase","split","charsArray","Uint8Array","i","charCodeAt","hashed","arrayify","keccak256","toUpperCase","addressChecksum","join","augmentConnectorUpdate","connector","update","provider","Promise","all","undefined","getChainId","account","getAccount","_chainId","_account","supportedChainIds","includes","UnsupportedChainIdError","getProvider","StaleConnectorError","name","constructor","Error","unsupportedChainId","message","ActionType","reducer","state","type","payload","ACTIVATE_CONNECTOR","onError","UPDATE","UPDATE_FROM_ERROR","error","ERROR","ERROR_FROM_ACTIVATION","DEACTIVATE_CONNECTOR","useWeb3ReactManager","useReducer","dispatch","updateBusterRef","useRef","current","activate","useCallback","throwErrors","updateBusterInitial","activated","augmentedUpdate","deactivate","warning","setError","handleUpdate","handleError","handleDeactivate","useEffect","on","ConnectorEvent","Update","Deactivate","off","PRIMARY_KEY","CONTEXTS","createWeb3ReactRoot","key","createContext","active","displayName","Provider","Web3ReactProvider","getLibrary","children","library","useMemo","web3ReactContext","React","value","getWeb3ReactContext","Object","keys","useWeb3React","useContext"],"mappings":"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"}