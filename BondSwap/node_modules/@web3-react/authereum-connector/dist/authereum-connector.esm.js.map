{"version":3,"file":"authereum-connector.esm.js","sources":["../src/index.ts"],"sourcesContent":["import { ConnectorUpdate } from '@web3-react/types'\nimport { AbstractConnector } from '@web3-react/abstract-connector'\n\nconst chainIdToNetwork: { [network: number]: string } = {\n  1: 'mainnet',\n  3: 'ropsten',\n  4: 'rinkeby',\n  5: 'goerli',\n  42: 'kovan'\n}\n\ninterface AuthereumConnectorArguments {\n  chainId: number\n  config?: any\n}\n\nexport class AuthereumConnector extends AbstractConnector {\n  private readonly chainId: number\n  private readonly config: any\n\n  public authereum: any\n\n  constructor({ chainId, config = {} }: AuthereumConnectorArguments) {\n    super({ supportedChainIds: [chainId] })\n\n    this.chainId = chainId\n    this.config = config\n  }\n\n  public async activate(): Promise<ConnectorUpdate> {\n    if (!this.authereum) {\n      const Authereum = await import('authereum').then(m => m?.default ?? m)\n      this.authereum = new Authereum({\n        networkName: chainIdToNetwork[this.chainId],\n        ...this.config\n      })\n    }\n\n    await this.authereum\n      .getProvider()\n      .enable()\n      .then((accounts: string[]): string => accounts[0])\n\n    return { provider: this.authereum.getProvider() }\n  }\n\n  public async getProvider(): Promise<any> {\n    return this.authereum.getProvider()\n  }\n\n  public async getChainId(): Promise<number | string> {\n    return this.authereum.getNetworkId()\n  }\n\n  public async getAccount(): Promise<null | string> {\n    return this.authereum.getAccountAddress()\n  }\n\n  public deactivate() {}\n\n  public async close() {\n    this.authereum.logout()\n    this.emitDeactivate()\n  }\n}\n"],"names":["chainIdToNetwork","AuthereumConnector","chainId","config","supportedChainIds","activate","authereum","getProvider","enable","then","accounts","provider","m","Authereum","networkName","getChainId","getNetworkId","getAccount","getAccountAddress","deactivate","close","logout","emitDeactivate","AbstractConnector"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAGA,IAAMA,gBAAgB,GAAkC;AACtD,KAAG,SADmD;AAEtD,KAAG,SAFmD;AAGtD,KAAG,SAHmD;AAItD,KAAG,QAJmD;AAKtD,MAAI;AALkD,CAAxD;IAaaC,kBAAb;AAAA;;AAME;;;QAAcC,eAAAA;2BAASC;QAAAA,kCAAS;AAC9B,0CAAM;AAAEC,MAAAA,iBAAiB,EAAE,CAACF,OAAD;AAArB,KAAN;AAEA,UAAKA,OAAL,GAAeA,OAAf;AACA,UAAKC,MAAL,GAAcA,MAAd;;AACD;;AAXH;;AAAA,SAaeE,QAbf;AAAA;mBAcS;;;+BAQC,OAAKC,SAAL,CACHC,WADG,GAEHC,MAFG,GAGHC,IAHG,CAGE,UAACC,QAAD;AAAA,iBAAgCA,QAAQ,CAAC,CAAD,CAAxC;AAAA,SAHF;AAKN,iBAAO;AAAEC,YAAAA,QAAQ,EAAE,OAAKL,SAAL,CAAeC,WAAf;AAAZ,WAAP;;;;;YAbI,CAAC,OAAKD;iCACgB,OAAO,WAAP,EAAoBG,IAApB,CAAyB,UAAAG,CAAC;AAAA;;AAAA,iCAAIA,CAAJ,oBAAIA,CAAC,WAAL,yBAAkBA,CAAlB;AAAA,WAA1B,kBAAlBC;AACN,mBAAKP,SAAL,GAAiB,IAAIO,SAAJ;AACfC,cAAAA,WAAW,EAAEd,gBAAgB,CAAC,OAAKE,OAAN;AADd,eAEZ,OAAKC,MAFO,EAAjB;;;;;;AAYH,KA5BH;AAAA;AAAA;AAAA;;AAAA,SA8BeI,WA9Bf;AAAA;mBA+BW;;AAAP,6BAAO,OAAKD,SAAL,CAAeC,WAAf,EAAP;AACD,KAhCH;AAAA;AAAA;AAAA;;AAAA,SAkCeQ,UAlCf;AAAA;mBAmCW;;AAAP,6BAAO,OAAKT,SAAL,CAAeU,YAAf,EAAP;AACD,KApCH;AAAA;AAAA;AAAA;;AAAA,SAsCeC,UAtCf;AAAA;mBAuCW;;AAAP,6BAAO,OAAKX,SAAL,CAAeY,iBAAf,EAAP;AACD,KAxCH;AAAA;AAAA;AAAA;;AAAA,SA0CSC,UA1CT,GA0CS,wBA1CT;;AAAA,SA4CeC,KA5Cf;AAAA;oBA6CI;;AAAA,cAAKd,SAAL,CAAee,MAAf;;AACA,cAAKC,cAAL;;;AACD,KA/CH;AAAA;AAAA;AAAA;;AAAA;AAAA,EAAwCC,iBAAxC;;;;"}