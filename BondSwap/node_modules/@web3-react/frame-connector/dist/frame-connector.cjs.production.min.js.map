{"version":3,"file":"frame-connector.cjs.production.min.js","sources":["../src/index.ts"],"sourcesContent":["import { AbstractConnectorArguments, ConnectorUpdate } from '@web3-react/types'\nimport { AbstractConnector } from '@web3-react/abstract-connector'\nimport ethProvider from 'eth-provider'\nimport invariant from 'tiny-invariant'\n\nexport class UserRejectedRequestError extends Error {\n  public constructor() {\n    super()\n    this.name = this.constructor.name\n    this.message = 'The user rejected the request.'\n  }\n}\n\nexport class FrameConnector extends AbstractConnector {\n  private provider: any\n\n  constructor(kwargs: Required<AbstractConnectorArguments>) {\n    invariant(kwargs.supportedChainIds.length === 1, 'This connector only supports 1 chainId at the moment.')\n    super(kwargs)\n\n    this.handleNetworkChanged = this.handleNetworkChanged.bind(this)\n    this.handleChainChanged = this.handleChainChanged.bind(this)\n    this.handleAccountsChanged = this.handleAccountsChanged.bind(this)\n    this.handleClose = this.handleClose.bind(this)\n  }\n\n  private handleNetworkChanged(networkId: string): void {\n    if (__DEV__) {\n      console.log(\"Handling 'networkChanged' event with payload\", networkId)\n    }\n    this.emitUpdate({ provider: this.provider, chainId: networkId })\n  }\n\n  private handleChainChanged(chainId: string): void {\n    if (__DEV__) {\n      console.log(\"Handling 'chainChanged' event with payload\", chainId)\n    }\n    this.emitUpdate({ chainId })\n  }\n\n  private handleAccountsChanged(accounts: string[]): void {\n    if (__DEV__) {\n      console.log(\"Handling 'accountsChanged' event with payload\", accounts)\n    }\n    this.emitUpdate({ account: accounts.length === 0 ? null : accounts[0] })\n  }\n\n  private handleClose(code: number, reason: string): void {\n    if (__DEV__) {\n      console.log(\"Handling 'close' event with payload\", code, reason)\n    }\n    this.emitDeactivate()\n  }\n\n  public async activate(): Promise<ConnectorUpdate> {\n    if (!this.provider) {\n      this.provider = ethProvider('frame')\n    }\n\n    this.provider\n      .on('networkChanged', this.handleNetworkChanged)\n      .on('chainChanged', this.handleChainChanged)\n      .on('accountsChanged', this.handleAccountsChanged)\n      .on('close', this.handleClose)\n\n    const account = await this.provider\n      .enable()\n      .then((accounts: string[]): string => accounts[0])\n      .catch((error: Error): void => {\n        if (error && (error as any).code === 4001) {\n          throw new UserRejectedRequestError()\n        } else {\n          throw error\n        }\n      })\n\n    return { provider: this.provider, account }\n  }\n\n  public async getProvider(): Promise<any> {\n    return this.provider\n  }\n\n  public async getChainId(): Promise<number> {\n    return this.provider.send('eth_chainId')\n  }\n\n  public async getAccount(): Promise<null> {\n    return this.provider.send('eth_accounts').then((accounts: string[]): string => accounts[0])\n  }\n\n  public deactivate() {\n    this.provider\n      .removeListener('networkChanged', this.handleNetworkChanged)\n      .removeListener('chainChanged', this.handleChainChanged)\n      .removeListener('accountsChanged', this.handleAccountsChanged)\n      .removeListener('close', this.handleClose)\n  }\n}\n"],"names":["UserRejectedRequestError","name","_this","constructor","message","Error","kwargs","supportedChainIds","length","invariant","handleNetworkChanged","_this2","bind","handleChainChanged","handleAccountsChanged","handleClose","networkId","emitUpdate","provider","this","chainId","accounts","account","code","reason","emitDeactivate","activate","_this4","ethProvider","on","enable","then","error","getProvider","getChainId","send","getAccount","deactivate","removeListener","AbstractConnector"],"mappings":"qhDAKaA,8DAGJC,KAAOC,EAAKC,YAAYF,OACxBG,QAAU,sDAJ2BC,sDAWhCC,gBACoC,IAApCA,EAAOC,kBAAkBC,QAAnCC,qBACMH,UAEDI,qBAAuBC,EAAKD,qBAAqBE,aACjDC,mBAAqBF,EAAKE,mBAAmBD,aAC7CE,sBAAwBH,EAAKG,sBAAsBF,aACnDG,YAAcJ,EAAKI,YAAYH,+CAG9BF,qBAAA,SAAqBM,QAItBC,WAAW,CAAEC,SAAUC,KAAKD,SAAUE,QAASJ,OAG9CH,mBAAA,SAAmBO,QAIpBH,WAAW,CAAEG,QAAAA,OAGZN,sBAAA,SAAsBO,QAIvBJ,WAAW,CAAEK,QAA6B,IAApBD,EAASb,OAAe,KAAOa,EAAS,QAG7DN,YAAA,SAAYQ,EAAcC,QAI3BC,oBAGMC,8BACNP,YAAAQ,EAAKT,aACHA,SAAWU,EAAY,YAGzBV,SACFW,GAAG,iBAAkBF,EAAKjB,sBAC1BmB,GAAG,eAAgBF,EAAKd,oBACxBgB,GAAG,kBAAmBF,EAAKb,uBAC3Be,GAAG,QAASF,EAAKZ,6BAEEY,EAAKT,SACxBY,SACAC,MAAK,SAACV,UAA+BA,EAAS,aACxC,SAACW,SACFA,GAAiC,OAAvBA,EAAcT,KACpB,IAAIvB,EAEJgC,qBAPNV,SAWC,CAAEJ,SAAUS,EAAKT,SAAUI,QAAAA,4CAGvBW,kDACJd,KAAKD,gDAGDgB,iDACJf,KAAKD,SAASiB,KAAK,sDAGfC,iDACJjB,KAAKD,SAASiB,KAAK,gBAAgBJ,MAAK,SAACV,UAA+BA,EAAS,6CAGnFgB,WAAA,gBACAnB,SACFoB,eAAe,iBAAkBnB,KAAKT,sBACtC4B,eAAe,eAAgBnB,KAAKN,oBACpCyB,eAAe,kBAAmBnB,KAAKL,uBACvCwB,eAAe,QAASnB,KAAKJ,iBAnFAwB"}