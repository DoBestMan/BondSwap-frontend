import { ConnectorUpdate } from '@web3-react/types';
import { AbstractConnector } from '@web3-react/abstract-connector';
export declare class NoEthereumProviderError extends Error {
    constructor();
}
export declare class UserRejectedRequestError extends Error {
    constructor();
}
interface ProvidedConnectorArguments {
    provider?: any;
    supportedChainIds: number[];
}
export declare class ProvidedConnector extends AbstractConnector {
    private provider;
    constructor({ provider, supportedChainIds }: ProvidedConnectorArguments);
    private handleChainChanged;
    private handleAccountsChanged;
    private handleClose;
    private handleNetworkChanged;
    activate(): Promise<ConnectorUpdate>;
    getProvider(): Promise<any>;
    getChainId(): Promise<number | string>;
    getAccount(): Promise<null | string>;
    deactivate(): void;
    isAuthorized(): Promise<boolean>;
}
export {};
